//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32              15/May/2008  12:06:30 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  thumb                                               /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  C:\David JIANG\ST MCU\Docs\STM32\AN_JIANG\TIM       /
//                       Encoder\example\FWLib\src\stm32f10x_dma.c           /
//    Command line    =  "C:\David JIANG\ST MCU\Docs\STM32\AN_JIANG\TIM      /
//                       Encoder\example\FWLib\src\stm32f10x_dma.c" -D       /
//                       VECT_TAB_FLASH -lcN "C:\David JIANG\ST              /
//                       MCU\Docs\STM32\AN_JIANG\TIM                         /
//                       Encoder\example\project\EWARM\BOOT_FLASH\List\"     /
//                       -lb "C:\David JIANG\ST MCU\Docs\STM32\AN_JIANG\TIM  /
//                       Encoder\example\project\EWARM\BOOT_FLASH\List\" -o  /
//                       "C:\David JIANG\ST MCU\Docs\STM32\AN_JIANG\TIM      /
//                       Encoder\example\project\EWARM\BOOT_FLASH\Obj\" -z3  /
//                       --no_cse --no_unroll --no_inline --no_code_motion   /
//                       --no_tbaa --no_clustering --no_scheduling --debug   /
//                       --cpu_mode thumb --endian little --cpu cortex-M3    /
//                       --stack_align 4 --require_prototypes --fpu None     /
//                       --dlib_config "C:\Program Files\IAR                 /
//                       Systems\Embedded Workbench                          /
//                       4.0\arm\LIB\dl7mptnnl8f.h" -I "C:\David JIANG\ST    /
//                       MCU\Docs\STM32\AN_JIANG\TIM                         /
//                       Encoder\example\project\EWARM\" -I "C:\David        /
//                       JIANG\ST MCU\Docs\STM32\AN_JIANG\TIM                /
//                       Encoder\example\project\EWARM\..\include\" -I       /
//                       "C:\David JIANG\ST MCU\Docs\STM32\AN_JIANG\TIM      /
//                       Encoder\example\project\EWARM\..\..\FWLib\inc\" -I  /
//                       "C:\Program Files\IAR Systems\Embedded Workbench    /
//                       4.0\arm\INC\"                                       /
//    List file       =  C:\David JIANG\ST MCU\Docs\STM32\AN_JIANG\TIM       /
//                       Encoder\example\project\EWARM\BOOT_FLASH\List\stm32 /
//                       f10x_dma.s79                                        /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME stm32f10x_dma

        RSEG CSTACK:DATA:NOROOT(2)

??DataTable0 EQU 0
??DataTable1 EQU 0
??DataTable10 EQU 0
??DataTable11 EQU 0
??DataTable12 EQU 0
??DataTable14 EQU 0
??DataTable15 EQU 0
??DataTable16 EQU 0
??DataTable17 EQU 0
??DataTable18 EQU 0
??DataTable19 EQU 0
??DataTable2 EQU 0
??DataTable20 EQU 0
??DataTable21 EQU 0
??DataTable22 EQU 0
??DataTable23 EQU 0
??DataTable24 EQU 0
??DataTable25 EQU 0
??DataTable26 EQU 0
??DataTable27 EQU 0
??DataTable29 EQU 0
??DataTable3 EQU 0
??DataTable30 EQU 0
??DataTable31 EQU 0
??DataTable4 EQU 0
??DataTable5 EQU 0
??DataTable6 EQU 0
??DataTable7 EQU 0
??DataTable8 EQU 0
??DataTable9 EQU 0
        MULTWEAK ??assert_failed??rT
        PUBLIC DMA_ClearFlag
        PUBLIC DMA_ClearITPendingBit
        PUBLIC DMA_Cmd
        PUBLIC DMA_DeInit
        PUBLIC DMA_GetCurrDataCounter
        PUBLIC DMA_GetFlagStatus
        PUBLIC DMA_GetITStatus
        PUBLIC DMA_ITConfig
        PUBLIC DMA_Init
        PUBLIC DMA_StructInit

assert_failed       SYMBOL "assert_failed"
??assert_failed??rT SYMBOL "??rT", assert_failed

        EXTERN DMA
        EXTERN assert_failed


        RSEG CODE:CODE:NOROOT(2)
        THUMB
DMA_DeInit:
        PUSH     {R4,LR}
        MOVS     R4,R0
        MOVS     R1,#+0
        MOVS     R0,R4
        BL       DMA_Cmd
        MOVS     R0,#+0
        STR      R0,[R4, #+0]
        MOVS     R0,#+0
        STR      R0,[R4, #+4]
        MOVS     R0,#+0
        STR      R0,[R4, #+8]
        MOVS     R0,#+0
        STR      R0,[R4, #+12]
        LDR.N    R0,??DMA_DeInit_0  ;; 0x40020008
        SUBS     R4,R4,R0
        BEQ.N    ??DMA_DeInit_1
        SUBS     R4,R4,#+20
        BEQ.N    ??DMA_DeInit_2
        SUBS     R4,R4,#+20
        BEQ.N    ??DMA_DeInit_3
        SUBS     R4,R4,#+20
        BEQ.N    ??DMA_DeInit_4
        SUBS     R4,R4,#+20
        BEQ.N    ??DMA_DeInit_5
        SUBS     R4,R4,#+20
        BEQ.N    ??DMA_DeInit_6
        SUBS     R4,R4,#+20
        BEQ.N    ??DMA_DeInit_7
        B.N      ??DMA_DeInit_8
??DMA_DeInit_1:
        LDR.N    R0,??DataTable13  ;; DMA
        LDR      R0,[R0, #+0]
        LDR.N    R1,??DataTable13  ;; DMA
        LDR      R1,[R1, #+0]
        LDR      R1,[R1, #+4]
        ORRS     R1,R1,#0xF
        STR      R1,[R0, #+4]
        B.N      ??DMA_DeInit_8
??DMA_DeInit_2:
        LDR.N    R0,??DataTable13  ;; DMA
        LDR      R0,[R0, #+0]
        LDR.N    R1,??DataTable13  ;; DMA
        LDR      R1,[R1, #+0]
        LDR      R1,[R1, #+4]
        ORRS     R1,R1,#0xF0
        STR      R1,[R0, #+4]
        B.N      ??DMA_DeInit_8
??DMA_DeInit_3:
        LDR.N    R0,??DataTable13  ;; DMA
        LDR      R0,[R0, #+0]
        LDR.N    R1,??DataTable13  ;; DMA
        LDR      R1,[R1, #+0]
        LDR      R1,[R1, #+4]
        ORRS     R1,R1,#0xF00
        STR      R1,[R0, #+4]
        B.N      ??DMA_DeInit_8
??DMA_DeInit_4:
        LDR.N    R0,??DataTable13  ;; DMA
        LDR      R0,[R0, #+0]
        LDR.N    R1,??DataTable13  ;; DMA
        LDR      R1,[R1, #+0]
        LDR      R1,[R1, #+4]
        ORRS     R1,R1,#0xF000
        STR      R1,[R0, #+4]
        B.N      ??DMA_DeInit_8
??DMA_DeInit_5:
        LDR.N    R0,??DataTable13  ;; DMA
        LDR      R0,[R0, #+0]
        LDR.N    R1,??DataTable13  ;; DMA
        LDR      R1,[R1, #+0]
        LDR      R1,[R1, #+4]
        ORRS     R1,R1,#0xF0000
        STR      R1,[R0, #+4]
        B.N      ??DMA_DeInit_8
??DMA_DeInit_6:
        LDR.N    R0,??DataTable13  ;; DMA
        LDR      R0,[R0, #+0]
        LDR.N    R1,??DataTable13  ;; DMA
        LDR      R1,[R1, #+0]
        LDR      R1,[R1, #+4]
        ORRS     R1,R1,#0xF00000
        STR      R1,[R0, #+4]
        B.N      ??DMA_DeInit_8
??DMA_DeInit_7:
        LDR.N    R0,??DataTable13  ;; DMA
        LDR      R0,[R0, #+0]
        LDR.N    R1,??DataTable13  ;; DMA
        LDR      R1,[R1, #+0]
        LDR      R1,[R1, #+4]
        ORRS     R1,R1,#0xF000000
        STR      R1,[R0, #+4]
??DMA_DeInit_8:
        POP      {R4,PC}          ;; return
        Nop      
        DATA
??DMA_DeInit_0:
        DC32     0x40020008

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable13:
        DC32     DMA

        RSEG CODE:CODE:NOROOT(2)
        THUMB
DMA_Init:
        PUSH     {R4,R5,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        MOVS     R1,#+0
        LDR      R0,[R5, #+8]
        CMP      R0,#+16
        BEQ.N    ??DMA_Init_0
        LDR      R0,[R5, #+8]
        CMP      R0,#+0
        BEQ.N    ??DMA_Init_0
        MOVS     R1,#+133
        LDR.N    R0,??DataTable28  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??DMA_Init_0:
        LDR      R0,[R5, #+12]
        CMP      R0,#+0
        BEQ.N    ??DMA_Init_1
        LDR      R0,[R5, #+12]
        CMP      R0,#+65536
        BCC.N    ??DMA_Init_2
??DMA_Init_1:
        MOVS     R1,#+134
        LDR.N    R0,??DataTable28  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??DMA_Init_2:
        LDR      R0,[R5, #+16]
        CMP      R0,#+64
        BEQ.N    ??DMA_Init_3
        LDR      R0,[R5, #+16]
        CMP      R0,#+0
        BEQ.N    ??DMA_Init_3
        MOVS     R1,#+135
        LDR.N    R0,??DataTable28  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??DMA_Init_3:
        LDR      R0,[R5, #+20]
        CMP      R0,#+128
        BEQ.N    ??DMA_Init_4
        LDR      R0,[R5, #+20]
        CMP      R0,#+0
        BEQ.N    ??DMA_Init_4
        MOVS     R1,#+136
        LDR.N    R0,??DataTable28  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??DMA_Init_4:
        LDR      R0,[R5, #+24]
        CMP      R0,#+0
        BEQ.N    ??DMA_Init_5
        LDR      R0,[R5, #+24]
        CMP      R0,#+256
        BEQ.N    ??DMA_Init_5
        LDR      R0,[R5, #+24]
        CMP      R0,#+512
        BEQ.N    ??DMA_Init_5
        MOVS     R1,#+137
        LDR.N    R0,??DataTable28  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??DMA_Init_5:
        LDR      R0,[R5, #+28]
        CMP      R0,#+0
        BEQ.N    ??DMA_Init_6
        LDR      R0,[R5, #+28]
        CMP      R0,#+1024
        BEQ.N    ??DMA_Init_6
        LDR      R0,[R5, #+28]
        CMP      R0,#+2048
        BEQ.N    ??DMA_Init_6
        MOVS     R1,#+138
        LDR.N    R0,??DataTable28  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??DMA_Init_6:
        LDR      R0,[R5, #+32]
        CMP      R0,#+32
        BEQ.N    ??DMA_Init_7
        LDR      R0,[R5, #+32]
        CMP      R0,#+0
        BEQ.N    ??DMA_Init_7
        MOVS     R1,#+139
        LDR.N    R0,??DataTable28  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??DMA_Init_7:
        LDR      R0,[R5, #+36]
        CMP      R0,#+12288
        BEQ.N    ??DMA_Init_8
        LDR      R0,[R5, #+36]
        CMP      R0,#+8192
        BEQ.N    ??DMA_Init_8
        LDR      R0,[R5, #+36]
        CMP      R0,#+4096
        BEQ.N    ??DMA_Init_8
        LDR      R0,[R5, #+36]
        CMP      R0,#+0
        BEQ.N    ??DMA_Init_8
        MOVS     R1,#+140
        LDR.N    R0,??DataTable28  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??DMA_Init_8:
        LDR      R0,[R5, #+40]
        CMP      R0,#+16384
        BEQ.N    ??DMA_Init_9
        LDR      R0,[R5, #+40]
        CMP      R0,#+0
        BEQ.N    ??DMA_Init_9
        MOVS     R1,#+141
        LDR.N    R0,??DataTable28  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??DMA_Init_9:
        LDR      R1,[R4, #+0]
        MOVS     R0,R1
        LDR.N    R1,??DMA_Init_10  ;; 0xffffffffffff800f
        ANDS     R1,R1,R0
        MOVS     R0,R1
        LDR      R1,[R5, #+8]
        LDR      R2,[R5, #+32]
        ORRS     R2,R2,R1
        LDR      R1,[R5, #+16]
        ORRS     R1,R1,R2
        LDR      R2,[R5, #+20]
        ORRS     R2,R2,R1
        LDR      R1,[R5, #+24]
        ORRS     R1,R1,R2
        LDR      R2,[R5, #+28]
        ORRS     R2,R2,R1
        LDR      R3,[R5, #+36]
        ORRS     R3,R3,R2
        LDR      R1,[R5, #+40]
        ORRS     R1,R1,R3
        ORRS     R1,R1,R0
        STR      R1,[R4, #+0]
        LDR      R0,[R5, #+12]
        STR      R0,[R4, #+4]
        LDR      R0,[R5, #+0]
        STR      R0,[R4, #+8]
        LDR      R0,[R5, #+4]
        STR      R0,[R4, #+12]
        POP      {R4,R5,PC}       ;; return
        DATA
??DMA_Init_10:
        DC32     0xffffffffffff800f

        RSEG CODE:CODE:NOROOT(2)
        THUMB
DMA_StructInit:
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
        MOVS     R1,#+0
        STR      R1,[R0, #+4]
        MOVS     R1,#+0
        STR      R1,[R0, #+8]
        MOVS     R1,#+0
        STR      R1,[R0, #+12]
        MOVS     R1,#+0
        STR      R1,[R0, #+16]
        MOVS     R1,#+0
        STR      R1,[R0, #+20]
        MOVS     R1,#+0
        STR      R1,[R0, #+24]
        MOVS     R1,#+0
        STR      R1,[R0, #+28]
        MOVS     R1,#+0
        STR      R1,[R0, #+32]
        MOVS     R1,#+0
        STR      R1,[R0, #+36]
        MOVS     R1,#+0
        STR      R1,[R0, #+40]
        BX       LR               ;; return

        RSEG CODE:CODE:NOROOT(2)
        THUMB
DMA_Cmd:
        PUSH     {R4,R5,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        CMP      R5,#+0
        BEQ.N    ??DMA_Cmd_0
        CMP      R5,#+1
        BEQ.N    ??DMA_Cmd_0
        MOVS     R1,#+235
        LDR.N    R0,??DataTable28  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??DMA_Cmd_0:
        CMP      R5,#+0
        BEQ.N    ??DMA_Cmd_1
        LDR      R0,[R4, #+0]
        ORRS     R0,R0,#0x1
        STR      R0,[R4, #+0]
        B.N      ??DMA_Cmd_2
??DMA_Cmd_1:
        LDR      R0,[R4, #+0]
        MOVS     R1,#+1
        BICS     R0,R0,R1
        STR      R0,[R4, #+0]
??DMA_Cmd_2:
        POP      {R4,R5,PC}       ;; return

        RSEG CODE:CODE:NOROOT(2)
        THUMB
DMA_ITConfig:
        PUSH     {R4-R6,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        MOVS     R6,R2
        MOVS     R0,R5
        MOVS     R1,#+14
        BICS     R0,R0,R1
        CMP      R0,#+0
        BNE.N    ??DMA_ITConfig_0
        CMP      R5,#+0
        BNE.N    ??DMA_ITConfig_1
??DMA_ITConfig_0:
        MOVS     R1,#+266
        LDR.N    R0,??DataTable28  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??DMA_ITConfig_1:
        CMP      R6,#+0
        BEQ.N    ??DMA_ITConfig_2
        CMP      R6,#+1
        BEQ.N    ??DMA_ITConfig_2
        LDR.N    R1,??DMA_ITConfig_3  ;; 0x10b
        LDR.N    R0,??DataTable28  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??DMA_ITConfig_2:
        CMP      R6,#+0
        BEQ.N    ??DMA_ITConfig_4
        LDR      R0,[R4, #+0]
        ORRS     R5,R5,R0
        STR      R5,[R4, #+0]
        B.N      ??DMA_ITConfig_5
??DMA_ITConfig_4:
        LDR      R0,[R4, #+0]
        BICS     R0,R0,R5
        STR      R0,[R4, #+0]
??DMA_ITConfig_5:
        POP      {R4-R6,PC}       ;; return
        DATA
??DMA_ITConfig_3:
        DC32     0x10b

        RSEG CODE:CODE:NOROOT(2)
        THUMB
DMA_GetCurrDataCounter:
        LDR      R0,[R0, #+4]
        LSLS     R0,R0,#+16       ;; ZeroExtS R0,R0,#+16,#+16
        LSRS     R0,R0,#+16
        BX       LR               ;; return

        RSEG CODE:CODE:NOROOT(2)
        THUMB
DMA_GetFlagStatus:
        PUSH     {R4,LR}
        MOVS     R4,R0
        MOVS     R0,#+0
        CMP      R4,#+1
        BEQ.N    ??DMA_GetFlagStatus_0
        CMP      R4,#+2
        BEQ.N    ??DMA_GetFlagStatus_0
        CMP      R4,#+4
        BEQ.N    ??DMA_GetFlagStatus_0
        CMP      R4,#+8
        BEQ.N    ??DMA_GetFlagStatus_0
        CMP      R4,#+16
        BEQ.N    ??DMA_GetFlagStatus_0
        CMP      R4,#+32
        BEQ.N    ??DMA_GetFlagStatus_0
        CMP      R4,#+64
        BEQ.N    ??DMA_GetFlagStatus_0
        CMP      R4,#+128
        BEQ.N    ??DMA_GetFlagStatus_0
        CMP      R4,#+256
        BEQ.N    ??DMA_GetFlagStatus_0
        CMP      R4,#+512
        BEQ.N    ??DMA_GetFlagStatus_0
        CMP      R4,#+1024
        BEQ.N    ??DMA_GetFlagStatus_0
        CMP      R4,#+2048
        BEQ.N    ??DMA_GetFlagStatus_0
        CMP      R4,#+4096
        BEQ.N    ??DMA_GetFlagStatus_0
        CMP      R4,#+8192
        BEQ.N    ??DMA_GetFlagStatus_0
        CMP      R4,#+16384
        BEQ.N    ??DMA_GetFlagStatus_0
        CMP      R4,#+32768
        BEQ.N    ??DMA_GetFlagStatus_0
        CMP      R4,#+65536
        BEQ.N    ??DMA_GetFlagStatus_0
        CMP      R4,#+131072
        BEQ.N    ??DMA_GetFlagStatus_0
        CMP      R4,#+262144
        BEQ.N    ??DMA_GetFlagStatus_0
        CMP      R4,#+524288
        BEQ.N    ??DMA_GetFlagStatus_0
        CMP      R4,#+1048576
        BEQ.N    ??DMA_GetFlagStatus_0
        CMP      R4,#+2097152
        BEQ.N    ??DMA_GetFlagStatus_0
        CMP      R4,#+4194304
        BEQ.N    ??DMA_GetFlagStatus_0
        CMP      R4,#+8388608
        BEQ.N    ??DMA_GetFlagStatus_0
        CMP      R4,#+16777216
        BEQ.N    ??DMA_GetFlagStatus_0
        CMP      R4,#+33554432
        BEQ.N    ??DMA_GetFlagStatus_0
        CMP      R4,#+67108864
        BEQ.N    ??DMA_GetFlagStatus_0
        CMP      R4,#+134217728
        BEQ.N    ??DMA_GetFlagStatus_0
        MOVS     R1,#+338
        LDR.N    R0,??DataTable28  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??DMA_GetFlagStatus_0:
        LDR.N    R0,??DataTable33  ;; DMA
        LDR      R0,[R0, #+0]
        LDR      R0,[R0, #+0]
        ANDS     R4,R4,R0
        CMP      R4,#+0
        BEQ.N    ??DMA_GetFlagStatus_1
        MOVS     R0,#+1
        B.N      ??DMA_GetFlagStatus_2
??DMA_GetFlagStatus_1:
        MOVS     R0,#+0
??DMA_GetFlagStatus_2:
        POP      {R4,PC}          ;; return

        RSEG CODE:CODE:NOROOT(2)
        THUMB
DMA_ClearFlag:
        PUSH     {R4,LR}
        MOVS     R4,R0
        LSRS     R0,R4,#+28
        LSLS     R0,R0,#+28
        CMP      R0,#+0
        BNE.N    ??DMA_ClearFlag_0
        CMP      R4,#+0
        BNE.N    ??DMA_ClearFlag_1
??DMA_ClearFlag_0:
        MOVS     R1,#+394
        LDR.N    R0,??DataTable28  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??DMA_ClearFlag_1:
        LDR.N    R0,??DataTable33  ;; DMA
        LDR      R0,[R0, #+0]
        STR      R4,[R0, #+4]
        POP      {R4,PC}          ;; return

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable28:
        DC32     `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`

        RSEG CODE:CODE:NOROOT(2)
        THUMB
DMA_GetITStatus:
        PUSH     {R4,LR}
        MOVS     R4,R0
        MOVS     R0,#+0
        CMP      R4,#+1
        BEQ.N    ??DMA_GetITStatus_0
        CMP      R4,#+2
        BEQ.N    ??DMA_GetITStatus_0
        CMP      R4,#+4
        BEQ.N    ??DMA_GetITStatus_0
        CMP      R4,#+8
        BEQ.N    ??DMA_GetITStatus_0
        CMP      R4,#+16
        BEQ.N    ??DMA_GetITStatus_0
        CMP      R4,#+32
        BEQ.N    ??DMA_GetITStatus_0
        CMP      R4,#+64
        BEQ.N    ??DMA_GetITStatus_0
        CMP      R4,#+128
        BEQ.N    ??DMA_GetITStatus_0
        CMP      R4,#+256
        BEQ.N    ??DMA_GetITStatus_0
        CMP      R4,#+512
        BEQ.N    ??DMA_GetITStatus_0
        CMP      R4,#+1024
        BEQ.N    ??DMA_GetITStatus_0
        CMP      R4,#+2048
        BEQ.N    ??DMA_GetITStatus_0
        CMP      R4,#+4096
        BEQ.N    ??DMA_GetITStatus_0
        CMP      R4,#+8192
        BEQ.N    ??DMA_GetITStatus_0
        CMP      R4,#+16384
        BEQ.N    ??DMA_GetITStatus_0
        CMP      R4,#+32768
        BEQ.N    ??DMA_GetITStatus_0
        CMP      R4,#+65536
        BEQ.N    ??DMA_GetITStatus_0
        CMP      R4,#+131072
        BEQ.N    ??DMA_GetITStatus_0
        CMP      R4,#+262144
        BEQ.N    ??DMA_GetITStatus_0
        CMP      R4,#+524288
        BEQ.N    ??DMA_GetITStatus_0
        CMP      R4,#+1048576
        BEQ.N    ??DMA_GetITStatus_0
        CMP      R4,#+2097152
        BEQ.N    ??DMA_GetITStatus_0
        CMP      R4,#+4194304
        BEQ.N    ??DMA_GetITStatus_0
        CMP      R4,#+8388608
        BEQ.N    ??DMA_GetITStatus_0
        CMP      R4,#+16777216
        BEQ.N    ??DMA_GetITStatus_0
        CMP      R4,#+33554432
        BEQ.N    ??DMA_GetITStatus_0
        CMP      R4,#+67108864
        BEQ.N    ??DMA_GetITStatus_0
        CMP      R4,#+134217728
        BEQ.N    ??DMA_GetITStatus_0
        MOVS     R1,#+442
        LDR.N    R0,??DataTable32  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??DMA_GetITStatus_0:
        LDR.N    R0,??DataTable33  ;; DMA
        LDR      R0,[R0, #+0]
        LDR      R0,[R0, #+0]
        ANDS     R4,R4,R0
        CMP      R4,#+0
        BEQ.N    ??DMA_GetITStatus_1
        MOVS     R0,#+1
        B.N      ??DMA_GetITStatus_2
??DMA_GetITStatus_1:
        MOVS     R0,#+0
??DMA_GetITStatus_2:
        POP      {R4,PC}          ;; return

        RSEG CODE:CODE:NOROOT(2)
        THUMB
DMA_ClearITPendingBit:
        PUSH     {R4,LR}
        MOVS     R4,R0
        LSRS     R0,R4,#+28
        LSLS     R0,R0,#+28
        CMP      R0,#+0
        BNE.N    ??DMA_ClearITPendingBit_0
        CMP      R4,#+0
        BNE.N    ??DMA_ClearITPendingBit_1
??DMA_ClearITPendingBit_0:
        MOVS     R1,#+498
        LDR.N    R0,??DataTable32  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??DMA_ClearITPendingBit_1:
        LDR.N    R0,??DataTable33  ;; DMA
        LDR      R0,[R0, #+0]
        STR      R4,[R0, #+4]
        POP      {R4,PC}          ;; return

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable32:
        DC32     `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable33:
        DC32     DMA

        RSEG CODE:CODE:NOROOT(2)
        THUMB
??assert_failed??rT:
        LDR.N    R3,??Subroutine0_0  ;; assert_failed
        BX       R3
        DATA
??Subroutine0_0:
        DC32     assert_failed

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "C:\\\\David JIANG\\\\ST MCU...">`:
        DATA
        DC8 43H, 3AH, 5CH, 44H, 61H, 76H, 69H, 64H
        DC8 20H, 4AH, 49H, 41H, 4EH, 47H, 5CH, 53H
        DC8 54H, 20H, 4DH, 43H, 55H, 5CH, 44H, 6FH
        DC8 63H, 73H, 5CH, 53H, 54H, 4DH, 33H, 32H
        DC8 5CH, 41H, 4EH, 5FH, 4AH, 49H, 41H, 4EH
        DC8 47H, 5CH, 54H, 49H, 4DH, 20H, 45H, 6EH
        DC8 63H, 6FH, 64H, 65H, 72H, 5CH, 65H, 78H
        DC8 61H, 6DH, 70H, 6CH, 65H, 5CH, 46H, 57H
        DC8 4CH, 69H, 62H, 5CH, 73H, 72H, 63H, 5CH
        DC8 73H, 74H, 6DH, 33H, 32H, 66H, 31H, 30H
        DC8 78H, 5FH, 64H, 6DH, 61H, 2EH, 63H, 0

        END
// 
// 1 124 bytes in segment CODE
//    88 bytes in segment DATA_C
// 
// 1 116 bytes of CODE  memory (+ 8 bytes shared)
//    88 bytes of CONST memory
//
//Errors: none
//Warnings: none
