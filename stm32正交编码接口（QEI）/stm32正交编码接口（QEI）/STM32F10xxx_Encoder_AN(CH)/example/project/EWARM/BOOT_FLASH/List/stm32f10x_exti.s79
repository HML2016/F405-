//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32              15/May/2008  12:06:30 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  thumb                                               /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  C:\David JIANG\ST MCU\Docs\STM32\AN_JIANG\TIM       /
//                       Encoder\example\FWLib\src\stm32f10x_exti.c          /
//    Command line    =  "C:\David JIANG\ST MCU\Docs\STM32\AN_JIANG\TIM      /
//                       Encoder\example\FWLib\src\stm32f10x_exti.c" -D      /
//                       VECT_TAB_FLASH -lcN "C:\David JIANG\ST              /
//                       MCU\Docs\STM32\AN_JIANG\TIM                         /
//                       Encoder\example\project\EWARM\BOOT_FLASH\List\"     /
//                       -lb "C:\David JIANG\ST MCU\Docs\STM32\AN_JIANG\TIM  /
//                       Encoder\example\project\EWARM\BOOT_FLASH\List\" -o  /
//                       "C:\David JIANG\ST MCU\Docs\STM32\AN_JIANG\TIM      /
//                       Encoder\example\project\EWARM\BOOT_FLASH\Obj\" -z3  /
//                       --no_cse --no_unroll --no_inline --no_code_motion   /
//                       --no_tbaa --no_clustering --no_scheduling --debug   /
//                       --cpu_mode thumb --endian little --cpu cortex-M3    /
//                       --stack_align 4 --require_prototypes --fpu None     /
//                       --dlib_config "C:\Program Files\IAR                 /
//                       Systems\Embedded Workbench                          /
//                       4.0\arm\LIB\dl7mptnnl8f.h" -I "C:\David JIANG\ST    /
//                       MCU\Docs\STM32\AN_JIANG\TIM                         /
//                       Encoder\example\project\EWARM\" -I "C:\David        /
//                       JIANG\ST MCU\Docs\STM32\AN_JIANG\TIM                /
//                       Encoder\example\project\EWARM\..\include\" -I       /
//                       "C:\David JIANG\ST MCU\Docs\STM32\AN_JIANG\TIM      /
//                       Encoder\example\project\EWARM\..\..\FWLib\inc\" -I  /
//                       "C:\Program Files\IAR Systems\Embedded Workbench    /
//                       4.0\arm\INC\"                                       /
//    List file       =  C:\David JIANG\ST MCU\Docs\STM32\AN_JIANG\TIM       /
//                       Encoder\example\project\EWARM\BOOT_FLASH\List\stm32 /
//                       f10x_exti.s79                                       /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME stm32f10x_exti

        RSEG CSTACK:DATA:NOROOT(2)

??DataTable0 EQU 0
??DataTable1 EQU 0
??DataTable10 EQU 0
??DataTable11 EQU 0
??DataTable12 EQU 0
??DataTable13 EQU 0
??DataTable14 EQU 0
??DataTable15 EQU 0
??DataTable16 EQU 0
??DataTable17 EQU 0
??DataTable18 EQU 0
??DataTable19 EQU 0
??DataTable2 EQU 0
??DataTable20 EQU 0
??DataTable21 EQU 0
??DataTable22 EQU 0
??DataTable23 EQU 0
??DataTable24 EQU 0
??DataTable25 EQU 0
??DataTable26 EQU 0
??DataTable3 EQU 0
??DataTable4 EQU 0
??DataTable5 EQU 0
??DataTable6 EQU 0
??DataTable7 EQU 0
??DataTable8 EQU 0
??DataTable9 EQU 0
        MULTWEAK ??assert_failed??rT
        PUBLIC EXTI_ClearFlag
        PUBLIC EXTI_ClearITPendingBit
        PUBLIC EXTI_DeInit
        PUBLIC EXTI_GenerateSWInterrupt
        PUBLIC EXTI_GetFlagStatus
        PUBLIC EXTI_GetITStatus
        PUBLIC EXTI_Init
        PUBLIC EXTI_StructInit

assert_failed       SYMBOL "assert_failed"
??assert_failed??rT SYMBOL "??rT", assert_failed

        EXTERN EXTI
        EXTERN assert_failed


        RSEG CODE:CODE:NOROOT(2)
        THUMB
EXTI_DeInit:
        LDR.N    R0,??DataTable28  ;; EXTI
        LDR      R0,[R0, #+0]
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
        LDR.N    R0,??DataTable28  ;; EXTI
        LDR      R0,[R0, #+0]
        MOVS     R1,#+0
        STR      R1,[R0, #+4]
        LDR.N    R0,??DataTable28  ;; EXTI
        LDR      R0,[R0, #+0]
        MOVS     R1,#+0
        STR      R1,[R0, #+8]
        LDR.N    R0,??DataTable28  ;; EXTI
        LDR      R0,[R0, #+0]
        MOVS     R1,#+0
        STR      R1,[R0, #+12]
        LDR.N    R0,??DataTable28  ;; EXTI
        LDR      R0,[R0, #+0]
        LDR.N    R1,??EXTI_DeInit_0  ;; 0x7ffff
        STR      R1,[R0, #+20]
        BX       LR               ;; return
        Nop      
        DATA
??EXTI_DeInit_0:
        DC32     0x7ffff

        RSEG CODE:CODE:NOROOT(2)
        THUMB
EXTI_Init:
        PUSH     {R4,LR}
        MOVS     R4,R0
        LDRB     R0,[R4, #+4]
        CMP      R0,#+0
        BEQ.N    ??EXTI_Init_0
        LDRB     R0,[R4, #+4]
        CMP      R0,#+4
        BEQ.N    ??EXTI_Init_0
        MOVS     R1,#+63
        LDR.N    R0,??DataTable27  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??EXTI_Init_0:
        LDRB     R0,[R4, #+5]
        CMP      R0,#+8
        BEQ.N    ??EXTI_Init_1
        LDRB     R0,[R4, #+5]
        CMP      R0,#+12
        BEQ.N    ??EXTI_Init_1
        LDRB     R0,[R4, #+5]
        CMP      R0,#+16
        BEQ.N    ??EXTI_Init_1
        MOVS     R1,#+64
        LDR.N    R0,??DataTable27  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??EXTI_Init_1:
        LDR      R0,[R4, #+0]
        LSRS     R0,R0,#+19
        LSLS     R0,R0,#+19
        CMP      R0,#+0
        BNE.N    ??EXTI_Init_2
        LDR      R0,[R4, #+0]
        CMP      R0,#+0
        BNE.N    ??EXTI_Init_3
??EXTI_Init_2:
        MOVS     R1,#+65
        LDR.N    R0,??DataTable27  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??EXTI_Init_3:
        LDRB     R0,[R4, #+6]
        CMP      R0,#+0
        BEQ.N    ??EXTI_Init_4
        LDRB     R0,[R4, #+6]
        CMP      R0,#+1
        BEQ.N    ??EXTI_Init_4
        MOVS     R1,#+66
        LDR.N    R0,??DataTable27  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??EXTI_Init_4:
        LDRB     R0,[R4, #+6]
        CMP      R0,#+0
        BEQ.N    ??EXTI_Init_5
        LDRB     R0,[R4, #+4]
        LDR.N    R1,??EXTI_Init_6  ;; 0x40010400
        LDRB     R2,[R4, #+4]
        LDR.N    R3,??EXTI_Init_6  ;; 0x40010400
        LDR      R2,[R2, R3]
        LDR      R3,[R4, #+0]
        ORRS     R3,R3,R2
        STR      R3,[R0, R1]
        LDR.N    R0,??DataTable28  ;; EXTI
        LDR      R0,[R0, #+0]
        LDR.N    R1,??DataTable28  ;; EXTI
        LDR      R1,[R1, #+0]
        LDR      R1,[R1, #+8]
        LDR      R2,[R4, #+0]
        BICS     R1,R1,R2
        STR      R1,[R0, #+8]
        LDR.N    R0,??DataTable28  ;; EXTI
        LDR      R0,[R0, #+0]
        LDR.N    R1,??DataTable28  ;; EXTI
        LDR      R1,[R1, #+0]
        LDR      R1,[R1, #+12]
        LDR      R2,[R4, #+0]
        BICS     R1,R1,R2
        STR      R1,[R0, #+12]
        LDRB     R0,[R4, #+5]
        CMP      R0,#+16
        BNE.N    ??EXTI_Init_7
        LDR.N    R0,??DataTable28  ;; EXTI
        LDR      R0,[R0, #+0]
        LDR.N    R1,??DataTable28  ;; EXTI
        LDR      R1,[R1, #+0]
        LDR      R1,[R1, #+8]
        LDR      R2,[R4, #+0]
        ORRS     R2,R2,R1
        STR      R2,[R0, #+8]
        LDR.N    R0,??DataTable28  ;; EXTI
        LDR      R0,[R0, #+0]
        LDR.N    R1,??DataTable28  ;; EXTI
        LDR      R1,[R1, #+0]
        LDR      R1,[R1, #+12]
        LDR      R2,[R4, #+0]
        ORRS     R2,R2,R1
        STR      R2,[R0, #+12]
        B.N      ??EXTI_Init_8
??EXTI_Init_7:
        LDRB     R0,[R4, #+5]
        LDR.N    R1,??EXTI_Init_6  ;; 0x40010400
        LDRB     R2,[R4, #+5]
        LDR.N    R3,??EXTI_Init_6  ;; 0x40010400
        LDR      R2,[R2, R3]
        LDR      R3,[R4, #+0]
        ORRS     R3,R3,R2
        STR      R3,[R0, R1]
        B.N      ??EXTI_Init_8
??EXTI_Init_5:
        LDRB     R0,[R4, #+4]
        LDR.N    R1,??EXTI_Init_6  ;; 0x40010400
        LDRB     R2,[R4, #+4]
        LDR.N    R3,??EXTI_Init_6  ;; 0x40010400
        LDR      R2,[R2, R3]
        LDR      R3,[R4, #+0]
        BICS     R2,R2,R3
        STR      R2,[R0, R1]
??EXTI_Init_8:
        POP      {R4,PC}          ;; return
        DATA
??EXTI_Init_6:
        DC32     0x40010400

        RSEG CODE:CODE:NOROOT(2)
        THUMB
EXTI_StructInit:
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
        MOVS     R1,#+0
        STRB     R1,[R0, #+4]
        MOVS     R1,#+12
        STRB     R1,[R0, #+5]
        MOVS     R1,#+0
        STRB     R1,[R0, #+6]
        BX       LR               ;; return

        RSEG CODE:CODE:NOROOT(2)
        THUMB
EXTI_GenerateSWInterrupt:
        PUSH     {R4,LR}
        MOVS     R4,R0
        LSRS     R0,R4,#+19
        LSLS     R0,R0,#+19
        CMP      R0,#+0
        BNE.N    ??EXTI_GenerateSWInterrupt_0
        CMP      R4,#+0
        BNE.N    ??EXTI_GenerateSWInterrupt_1
??EXTI_GenerateSWInterrupt_0:
        MOVS     R1,#+124
        LDR.N    R0,??DataTable27  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??EXTI_GenerateSWInterrupt_1:
        LDR.N    R0,??DataTable28  ;; EXTI
        LDR      R0,[R0, #+0]
        LDR.N    R1,??DataTable28  ;; EXTI
        LDR      R1,[R1, #+0]
        LDR      R1,[R1, #+16]
        ORRS     R4,R4,R1
        STR      R4,[R0, #+16]
        POP      {R4,PC}          ;; return

        RSEG CODE:CODE:NOROOT(2)
        THUMB
EXTI_GetFlagStatus:
        PUSH     {R4,LR}
        MOVS     R4,R0
        MOVS     R0,#+0
        CMP      R4,#+1
        BEQ.N    ??EXTI_GetFlagStatus_0
        CMP      R4,#+2
        BEQ.N    ??EXTI_GetFlagStatus_0
        CMP      R4,#+4
        BEQ.N    ??EXTI_GetFlagStatus_0
        CMP      R4,#+8
        BEQ.N    ??EXTI_GetFlagStatus_0
        CMP      R4,#+16
        BEQ.N    ??EXTI_GetFlagStatus_0
        CMP      R4,#+32
        BEQ.N    ??EXTI_GetFlagStatus_0
        CMP      R4,#+64
        BEQ.N    ??EXTI_GetFlagStatus_0
        CMP      R4,#+128
        BEQ.N    ??EXTI_GetFlagStatus_0
        CMP      R4,#+256
        BEQ.N    ??EXTI_GetFlagStatus_0
        CMP      R4,#+512
        BEQ.N    ??EXTI_GetFlagStatus_0
        CMP      R4,#+1024
        BEQ.N    ??EXTI_GetFlagStatus_0
        CMP      R4,#+2048
        BEQ.N    ??EXTI_GetFlagStatus_0
        CMP      R4,#+4096
        BEQ.N    ??EXTI_GetFlagStatus_0
        CMP      R4,#+8192
        BEQ.N    ??EXTI_GetFlagStatus_0
        CMP      R4,#+16384
        BEQ.N    ??EXTI_GetFlagStatus_0
        CMP      R4,#+32768
        BEQ.N    ??EXTI_GetFlagStatus_0
        CMP      R4,#+65536
        BEQ.N    ??EXTI_GetFlagStatus_0
        CMP      R4,#+131072
        BEQ.N    ??EXTI_GetFlagStatus_0
        CMP      R4,#+262144
        BEQ.N    ??EXTI_GetFlagStatus_0
        MOVS     R1,#+143
        LDR.N    R0,??DataTable27  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??EXTI_GetFlagStatus_0:
        LDR.N    R0,??DataTable28  ;; EXTI
        LDR      R0,[R0, #+0]
        LDR      R0,[R0, #+20]
        ANDS     R4,R4,R0
        CMP      R4,#+0
        BEQ.N    ??EXTI_GetFlagStatus_1
        MOVS     R0,#+1
        B.N      ??EXTI_GetFlagStatus_2
??EXTI_GetFlagStatus_1:
        MOVS     R0,#+0
??EXTI_GetFlagStatus_2:
        POP      {R4,PC}          ;; return

        RSEG CODE:CODE:NOROOT(2)
        THUMB
EXTI_ClearFlag:
        PUSH     {R4,LR}
        MOVS     R4,R0
        LSRS     R0,R4,#+19
        LSLS     R0,R0,#+19
        CMP      R0,#+0
        BNE.N    ??EXTI_ClearFlag_0
        CMP      R4,#+0
        BNE.N    ??EXTI_ClearFlag_1
??EXTI_ClearFlag_0:
        MOVS     R1,#+168
        LDR.N    R0,??DataTable27  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??EXTI_ClearFlag_1:
        LDR.N    R0,??DataTable28  ;; EXTI
        LDR      R0,[R0, #+0]
        STR      R4,[R0, #+20]
        POP      {R4,PC}          ;; return

        RSEG CODE:CODE:NOROOT(2)
        THUMB
EXTI_GetITStatus:
        PUSH     {R4,LR}
        MOVS     R4,R0
        MOVS     R0,#+0
        MOVS     R1,#+0
        CMP      R4,#+1
        BEQ.N    ??EXTI_GetITStatus_0
        CMP      R4,#+2
        BEQ.N    ??EXTI_GetITStatus_0
        CMP      R4,#+4
        BEQ.N    ??EXTI_GetITStatus_0
        CMP      R4,#+8
        BEQ.N    ??EXTI_GetITStatus_0
        CMP      R4,#+16
        BEQ.N    ??EXTI_GetITStatus_0
        CMP      R4,#+32
        BEQ.N    ??EXTI_GetITStatus_0
        CMP      R4,#+64
        BEQ.N    ??EXTI_GetITStatus_0
        CMP      R4,#+128
        BEQ.N    ??EXTI_GetITStatus_0
        CMP      R4,#+256
        BEQ.N    ??EXTI_GetITStatus_0
        CMP      R4,#+512
        BEQ.N    ??EXTI_GetITStatus_0
        CMP      R4,#+1024
        BEQ.N    ??EXTI_GetITStatus_0
        CMP      R4,#+2048
        BEQ.N    ??EXTI_GetITStatus_0
        CMP      R4,#+4096
        BEQ.N    ??EXTI_GetITStatus_0
        CMP      R4,#+8192
        BEQ.N    ??EXTI_GetITStatus_0
        CMP      R4,#+16384
        BEQ.N    ??EXTI_GetITStatus_0
        CMP      R4,#+32768
        BEQ.N    ??EXTI_GetITStatus_0
        CMP      R4,#+65536
        BEQ.N    ??EXTI_GetITStatus_0
        CMP      R4,#+131072
        BEQ.N    ??EXTI_GetITStatus_0
        CMP      R4,#+262144
        BEQ.N    ??EXTI_GetITStatus_0
        MOVS     R1,#+188
        LDR.N    R0,??DataTable27  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??EXTI_GetITStatus_0:
        LDR.N    R0,??DataTable28  ;; EXTI
        LDR      R0,[R0, #+0]
        LDR      R1,[R0, #+0]
        ANDS     R1,R1,R4
        LDR.N    R0,??DataTable28  ;; EXTI
        LDR      R0,[R0, #+0]
        LDR      R0,[R0, #+20]
        ANDS     R4,R4,R0
        CMP      R4,#+0
        BEQ.N    ??EXTI_GetITStatus_1
        CMP      R1,#+0
        BEQ.N    ??EXTI_GetITStatus_1
        MOVS     R0,#+1
        B.N      ??EXTI_GetITStatus_2
??EXTI_GetITStatus_1:
        MOVS     R0,#+0
??EXTI_GetITStatus_2:
        POP      {R4,PC}          ;; return

        RSEG CODE:CODE:NOROOT(2)
        THUMB
EXTI_ClearITPendingBit:
        PUSH     {R4,LR}
        MOVS     R4,R0
        LSRS     R0,R4,#+19
        LSLS     R0,R0,#+19
        CMP      R0,#+0
        BNE.N    ??EXTI_ClearITPendingBit_0
        CMP      R4,#+0
        BNE.N    ??EXTI_ClearITPendingBit_1
??EXTI_ClearITPendingBit_0:
        MOVS     R1,#+215
        LDR.N    R0,??DataTable27  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??EXTI_ClearITPendingBit_1:
        LDR.N    R0,??DataTable28  ;; EXTI
        LDR      R0,[R0, #+0]
        STR      R4,[R0, #+20]
        POP      {R4,PC}          ;; return

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable27:
        DC32     `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable28:
        DC32     EXTI

        RSEG CODE:CODE:NOROOT(2)
        THUMB
??assert_failed??rT:
        LDR.N    R3,??Subroutine0_0  ;; assert_failed
        BX       R3
        DATA
??Subroutine0_0:
        DC32     assert_failed

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "C:\\\\David JIANG\\\\ST MCU...">`:
        DATA
        DC8 43H, 3AH, 5CH, 44H, 61H, 76H, 69H, 64H
        DC8 20H, 4AH, 49H, 41H, 4EH, 47H, 5CH, 53H
        DC8 54H, 20H, 4DH, 43H, 55H, 5CH, 44H, 6FH
        DC8 63H, 73H, 5CH, 53H, 54H, 4DH, 33H, 32H
        DC8 5CH, 41H, 4EH, 5FH, 4AH, 49H, 41H, 4EH
        DC8 47H, 5CH, 54H, 49H, 4DH, 20H, 45H, 6EH
        DC8 63H, 6FH, 64H, 65H, 72H, 5CH, 65H, 78H
        DC8 61H, 6DH, 70H, 6CH, 65H, 5CH, 46H, 57H
        DC8 4CH, 69H, 62H, 5CH, 73H, 72H, 63H, 5CH
        DC8 73H, 74H, 6DH, 33H, 32H, 66H, 31H, 30H
        DC8 78H, 5FH, 65H, 78H, 74H, 69H, 2EH, 63H
        DC8 0
        DC8 0, 0, 0

        END
// 
// 692 bytes in segment CODE
//  92 bytes in segment DATA_C
// 
// 684 bytes of CODE  memory (+ 8 bytes shared)
//  92 bytes of CONST memory
//
//Errors: none
//Warnings: none
