//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32              15/May/2008  12:06:30 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  thumb                                               /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  C:\David JIANG\ST MCU\Docs\STM32\AN_JIANG\TIM       /
//                       Encoder\example\FWLib\src\stm32f10x_adc.c           /
//    Command line    =  "C:\David JIANG\ST MCU\Docs\STM32\AN_JIANG\TIM      /
//                       Encoder\example\FWLib\src\stm32f10x_adc.c" -D       /
//                       VECT_TAB_FLASH -lcN "C:\David JIANG\ST              /
//                       MCU\Docs\STM32\AN_JIANG\TIM                         /
//                       Encoder\example\project\EWARM\BOOT_FLASH\List\"     /
//                       -lb "C:\David JIANG\ST MCU\Docs\STM32\AN_JIANG\TIM  /
//                       Encoder\example\project\EWARM\BOOT_FLASH\List\" -o  /
//                       "C:\David JIANG\ST MCU\Docs\STM32\AN_JIANG\TIM      /
//                       Encoder\example\project\EWARM\BOOT_FLASH\Obj\" -z3  /
//                       --no_cse --no_unroll --no_inline --no_code_motion   /
//                       --no_tbaa --no_clustering --no_scheduling --debug   /
//                       --cpu_mode thumb --endian little --cpu cortex-M3    /
//                       --stack_align 4 --require_prototypes --fpu None     /
//                       --dlib_config "C:\Program Files\IAR                 /
//                       Systems\Embedded Workbench                          /
//                       4.0\arm\LIB\dl7mptnnl8f.h" -I "C:\David JIANG\ST    /
//                       MCU\Docs\STM32\AN_JIANG\TIM                         /
//                       Encoder\example\project\EWARM\" -I "C:\David        /
//                       JIANG\ST MCU\Docs\STM32\AN_JIANG\TIM                /
//                       Encoder\example\project\EWARM\..\include\" -I       /
//                       "C:\David JIANG\ST MCU\Docs\STM32\AN_JIANG\TIM      /
//                       Encoder\example\project\EWARM\..\..\FWLib\inc\" -I  /
//                       "C:\Program Files\IAR Systems\Embedded Workbench    /
//                       4.0\arm\INC\"                                       /
//    List file       =  C:\David JIANG\ST MCU\Docs\STM32\AN_JIANG\TIM       /
//                       Encoder\example\project\EWARM\BOOT_FLASH\List\stm32 /
//                       f10x_adc.s79                                        /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME stm32f10x_adc

        RSEG CSTACK:DATA:NOROOT(2)

??DataTable0 EQU 0
??DataTable1 EQU 0
??DataTable10 EQU 0
??DataTable11 EQU 0
??DataTable12 EQU 0
??DataTable14 EQU 0
??DataTable15 EQU 0
??DataTable16 EQU 0
??DataTable17 EQU 0
??DataTable19 EQU 0
??DataTable2 EQU 0
??DataTable20 EQU 0
??DataTable21 EQU 0
??DataTable22 EQU 0
??DataTable24 EQU 0
??DataTable25 EQU 0
??DataTable26 EQU 0
??DataTable27 EQU 0
??DataTable28 EQU 0
??DataTable29 EQU 0
??DataTable3 EQU 0
??DataTable30 EQU 0
??DataTable31 EQU 0
??DataTable32 EQU 0
??DataTable33 EQU 0
??DataTable34 EQU 0
??DataTable35 EQU 0
??DataTable36 EQU 0
??DataTable37 EQU 0
??DataTable38 EQU 0
??DataTable4 EQU 0
??DataTable41 EQU 0
??DataTable42 EQU 0
??DataTable5 EQU 0
??DataTable6 EQU 0
??DataTable7 EQU 0
??DataTable8 EQU 0
        MULTWEAK ??RCC_APB2PeriphResetCmd??rT
        MULTWEAK ??assert_failed??rT
        PUBLIC ADC_AnalogWatchdogCmd
        PUBLIC ADC_AnalogWatchdogSingleChannelConfig
        PUBLIC ADC_AnalogWatchdogThresholdsConfig
        PUBLIC ADC_AutoInjectedConvCmd
        PUBLIC ADC_ClearFlag
        PUBLIC ADC_ClearITPendingBit
        PUBLIC ADC_Cmd
        PUBLIC ADC_DMACmd
        PUBLIC ADC_DeInit
        PUBLIC ADC_DiscModeChannelCountConfig
        PUBLIC ADC_DiscModeCmd
        PUBLIC ADC_ExternalTrigConvCmd
        PUBLIC ADC_ExternalTrigInjectedConvCmd
        PUBLIC ADC_ExternalTrigInjectedConvConfig
        PUBLIC ADC_GetCalibrationStatus
        PUBLIC ADC_GetConversionValue
        PUBLIC ADC_GetDualModeConversionValue
        PUBLIC ADC_GetFlagStatus
        PUBLIC ADC_GetITStatus
        PUBLIC ADC_GetInjectedConversionValue
        PUBLIC ADC_GetResetCalibrationStatus
        PUBLIC ADC_GetSoftwareStartConvStatus
        PUBLIC ADC_GetSoftwareStartInjectedConvCmdStatus
        PUBLIC ADC_ITConfig
        PUBLIC ADC_Init
        PUBLIC ADC_InjectedChannelConfig
        PUBLIC ADC_InjectedDiscModeCmd
        PUBLIC ADC_InjectedSequencerLengthConfig
        PUBLIC ADC_RegularChannelConfig
        PUBLIC ADC_ResetCalibration
        PUBLIC ADC_SetInjectedOffset
        PUBLIC ADC_SoftwareStartConvCmd
        PUBLIC ADC_SoftwareStartInjectedConvCmd
        PUBLIC ADC_StartCalibration
        PUBLIC ADC_StructInit
        PUBLIC ADC_TempSensorVrefintCmd

RCC_APB2PeriphResetCmd SYMBOL "RCC_APB2PeriphResetCmd"
assert_failed       SYMBOL "assert_failed"
??RCC_APB2PeriphResetCmd??rT SYMBOL "??rT", RCC_APB2PeriphResetCmd
??assert_failed??rT SYMBOL "??rT", assert_failed

        EXTERN ADC1
        EXTERN RCC_APB2PeriphResetCmd
        EXTERN assert_failed


        RSEG CODE:CODE:NOROOT(2)
        THUMB
ADC_DeInit:
        PUSH     {LR}
        LDR.N    R1,??ADC_DeInit_0  ;; 0x40012400
        CMP      R0,R1
        BEQ.N    ??ADC_DeInit_1
        LDR.N    R1,??ADC_DeInit_0+0x4  ;; 0x40012800
        CMP      R0,R1
        BEQ.N    ??ADC_DeInit_2
        B.N      ??ADC_DeInit_3
??ADC_DeInit_1:
        MOVS     R1,#+1
        MOVS     R0,#+512
        _BLF     RCC_APB2PeriphResetCmd,??RCC_APB2PeriphResetCmd??rT
        MOVS     R1,#+0
        MOVS     R0,#+512
        _BLF     RCC_APB2PeriphResetCmd,??RCC_APB2PeriphResetCmd??rT
        B.N      ??ADC_DeInit_3
??ADC_DeInit_2:
        MOVS     R1,#+1
        MOVS     R0,#+1024
        _BLF     RCC_APB2PeriphResetCmd,??RCC_APB2PeriphResetCmd??rT
        MOVS     R1,#+0
        MOVS     R0,#+1024
        _BLF     RCC_APB2PeriphResetCmd,??RCC_APB2PeriphResetCmd??rT
??ADC_DeInit_3:
        POP      {PC}             ;; return
        DATA
??ADC_DeInit_0:
        DC32     0x40012400
        DC32     0x40012800

        RSEG CODE:CODE:NOROOT(2)
        THUMB
ADC_Init:
        PUSH     {R4-R6,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        MOVS     R0,#+0
        MOVS     R6,#+0
        LDR      R1,[R5, #+0]
        CMP      R1,#+0
        BEQ.N    ??ADC_Init_0
        LDR      R0,[R5, #+0]
        CMP      R0,#+65536
        BEQ.N    ??ADC_Init_0
        LDR      R0,[R5, #+0]
        CMP      R0,#+131072
        BEQ.N    ??ADC_Init_0
        LDR      R0,[R5, #+0]
        CMP      R0,#+196608
        BEQ.N    ??ADC_Init_0
        LDR      R0,[R5, #+0]
        CMP      R0,#+262144
        BEQ.N    ??ADC_Init_0
        LDR      R0,[R5, #+0]
        CMP      R0,#+327680
        BEQ.N    ??ADC_Init_0
        LDR      R0,[R5, #+0]
        CMP      R0,#+393216
        BEQ.N    ??ADC_Init_0
        LDR      R0,[R5, #+0]
        CMP      R0,#+458752
        BEQ.N    ??ADC_Init_0
        LDR      R0,[R5, #+0]
        CMP      R0,#+524288
        BEQ.N    ??ADC_Init_0
        LDR      R0,[R5, #+0]
        CMP      R0,#+589824
        BEQ.N    ??ADC_Init_0
        MOVS     R1,#+167
        LDR.N    R0,??DataTable13  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??ADC_Init_0:
        LDRB     R0,[R5, #+4]
        CMP      R0,#+0
        BEQ.N    ??ADC_Init_1
        LDRB     R0,[R5, #+4]
        CMP      R0,#+1
        BEQ.N    ??ADC_Init_1
        MOVS     R1,#+168
        LDR.N    R0,??DataTable13  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??ADC_Init_1:
        LDRB     R0,[R5, #+5]
        CMP      R0,#+0
        BEQ.N    ??ADC_Init_2
        LDRB     R0,[R5, #+5]
        CMP      R0,#+1
        BEQ.N    ??ADC_Init_2
        MOVS     R1,#+169
        LDR.N    R0,??DataTable13  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??ADC_Init_2:
        LDR      R0,[R5, #+8]
        CMP      R0,#+0
        BEQ.N    ??ADC_Init_3
        LDR      R0,[R5, #+8]
        CMP      R0,#+131072
        BEQ.N    ??ADC_Init_3
        LDR      R0,[R5, #+8]
        CMP      R0,#+262144
        BEQ.N    ??ADC_Init_3
        LDR      R0,[R5, #+8]
        CMP      R0,#+393216
        BEQ.N    ??ADC_Init_3
        LDR      R0,[R5, #+8]
        CMP      R0,#+524288
        BEQ.N    ??ADC_Init_3
        LDR      R0,[R5, #+8]
        CMP      R0,#+655360
        BEQ.N    ??ADC_Init_3
        LDR      R0,[R5, #+8]
        CMP      R0,#+786432
        BEQ.N    ??ADC_Init_3
        LDR      R0,[R5, #+8]
        CMP      R0,#+917504
        BEQ.N    ??ADC_Init_3
        MOVS     R1,#+170
        LDR.N    R0,??DataTable13  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??ADC_Init_3:
        LDR      R0,[R5, #+12]
        CMP      R0,#+0
        BEQ.N    ??ADC_Init_4
        LDR      R0,[R5, #+12]
        CMP      R0,#+2048
        BEQ.N    ??ADC_Init_4
        MOVS     R1,#+171
        LDR.N    R0,??DataTable13  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??ADC_Init_4:
        LDRB     R0,[R5, #+16]
        CMP      R0,#+1
        BCC.N    ??ADC_Init_5
        LDRB     R0,[R5, #+16]
        CMP      R0,#+17
        BCC.N    ??ADC_Init_6
??ADC_Init_5:
        MOVS     R1,#+172
        LDR.N    R0,??DataTable13  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??ADC_Init_6:
        LDR      R0,[R4, #+4]
        MOVS     R1,R0
        LDR.N    R0,??ADC_Init_7  ;; 0xfffffffffff0feff
        ANDS     R0,R0,R1
        MOVS     R2,R0
        LDR      R0,[R5, #+0]
        LDRB     R1,[R5, #+4]
        ORRS     R0,R0,R1, LSL #+8
        ORRS     R0,R0,R2
        STR      R0,[R4, #+4]
        LDR      R0,[R4, #+8]
        MOVS     R1,R0
        LDR.N    R0,??ADC_Init_7+0x4  ;; 0xfffffffffff1f7fd
        ANDS     R0,R0,R1
        MOVS     R2,R0
        LDR      R0,[R5, #+12]
        LDR      R1,[R5, #+8]
        ORRS     R1,R1,R0
        LDRB     R0,[R5, #+5]
        ORRS     R0,R1,R0, LSL #+1
        ORRS     R0,R0,R2
        STR      R0,[R4, #+8]
        LDR      R0,[R4, #+44]
        MOVS     R1,R0
        MVNS     R0,#+15728640
        ANDS     R0,R0,R1
        MOVS     R1,R6
        LDRB     R6,[R5, #+16]
        SUBS     R6,R6,#+1
        ORRS     R6,R6,R1
        LSLS     R6,R6,#+24       ;; ZeroExtS R6,R6,#+24,#+24
        LSRS     R6,R6,#+24
        ORRS     R0,R0,R6, LSL #+20
        STR      R0,[R4, #+44]
        POP      {R4-R6,PC}       ;; return
        Nop      
        DATA
??ADC_Init_7:
        DC32     0xfffffffffff0feff
        DC32     0xfffffffffff1f7fd

        RSEG CODE:CODE:NOROOT(2)
        THUMB
ADC_StructInit:
        MOVS     R1,#+0
        STR      R1,[R0, #+0]
        MOVS     R1,#+0
        STRB     R1,[R0, #+4]
        MOVS     R1,#+0
        STRB     R1,[R0, #+5]
        MOVS     R1,#+0
        STR      R1,[R0, #+8]
        MOVS     R1,#+0
        STR      R1,[R0, #+12]
        MOVS     R1,#+1
        STRB     R1,[R0, #+16]
        BX       LR               ;; return

        RSEG CODE:CODE:NOROOT(2)
        THUMB
ADC_Cmd:
        PUSH     {R4,R5,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        CMP      R5,#+0
        BEQ.N    ??ADC_Cmd_0
        CMP      R5,#+1
        BEQ.N    ??ADC_Cmd_0
        MOVS     R1,#+255
        LDR.N    R0,??DataTable13  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??ADC_Cmd_0:
        CMP      R5,#+0
        BEQ.N    ??ADC_Cmd_1
        LDR      R0,[R4, #+8]
        ORRS     R0,R0,#0x1
        STR      R0,[R4, #+8]
        B.N      ??ADC_Cmd_2
??ADC_Cmd_1:
        LDR      R0,[R4, #+8]
        MOVS     R1,#+1
        BICS     R0,R0,R1
        STR      R0,[R4, #+8]
??ADC_Cmd_2:
        POP      {R4,R5,PC}       ;; return

        RSEG CODE:CODE:NOROOT(2)
        THUMB
ADC_DMACmd:
        PUSH     {R4,R5,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        CMP      R5,#+0
        BEQ.N    ??ADC_DMACmd_0
        CMP      R5,#+1
        BEQ.N    ??ADC_DMACmd_0
        LDR.N    R1,??ADC_DMACmd_1  ;; 0x119
        LDR.N    R0,??DataTable13  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??ADC_DMACmd_0:
        CMP      R5,#+0
        BEQ.N    ??ADC_DMACmd_2
        LDR      R0,[R4, #+8]
        ORRS     R0,R0,#0x100
        STR      R0,[R4, #+8]
        B.N      ??ADC_DMACmd_3
??ADC_DMACmd_2:
        LDR      R0,[R4, #+8]
        LDR.N    R1,??ADC_DMACmd_1+0x4  ;; 0xfeff
        ANDS     R1,R1,R0
        STR      R1,[R4, #+8]
??ADC_DMACmd_3:
        POP      {R4,R5,PC}       ;; return
        Nop      
        DATA
??ADC_DMACmd_1:
        DC32     0x119
        DC32     0xfeff

        RSEG CODE:CODE:NOROOT(2)
        THUMB
ADC_ITConfig:
        PUSH     {R4-R6,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        MOVS     R6,R2
        MOVS     R0,#+0
        CMP      R6,#+0
        BEQ.N    ??ADC_ITConfig_0
        CMP      R6,#+1
        BEQ.N    ??ADC_ITConfig_0
        LDR.N    R1,??ADC_ITConfig_1  ;; 0x13b
        LDR.N    R0,??DataTable13  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??ADC_ITConfig_0:
        LDR.N    R0,??DataTable9  ;; 0xf81f
        TST      R5,R0
        BNE.N    ??ADC_ITConfig_2
        CMP      R5,#+0
        BNE.N    ??ADC_ITConfig_3
??ADC_ITConfig_2:
        MOVS     R1,#+316
        LDR.N    R0,??DataTable13  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??ADC_ITConfig_3:
        MOVS     R0,R5
        CMP      R6,#+0
        BEQ.N    ??ADC_ITConfig_4
        LDR      R1,[R4, #+4]
        LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
        LSRS     R0,R0,#+24
        ORRS     R0,R0,R1
        STR      R0,[R4, #+4]
        B.N      ??ADC_ITConfig_5
??ADC_ITConfig_4:
        LDR      R1,[R4, #+4]
        LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
        LSRS     R0,R0,#+24
        BICS     R1,R1,R0
        STR      R1,[R4, #+4]
??ADC_ITConfig_5:
        POP      {R4-R6,PC}       ;; return
        DATA
??ADC_ITConfig_1:
        DC32     0x13b

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable9:
        DC32     0xf81f

        RSEG CODE:CODE:NOROOT(2)
        THUMB
ADC_ResetCalibration:
        LDR      R1,[R0, #+8]
        ORRS     R1,R1,#0x8
        STR      R1,[R0, #+8]
        BX       LR               ;; return

        RSEG CODE:CODE:NOROOT(2)
        THUMB
ADC_GetResetCalibrationStatus:
        MOVS     R1,R0
        MOVS     R0,#+0
        LDR      R1,[R1, #+8]
        LSLS     R1,R1,#+28
        BPL.N    ??ADC_GetResetCalibrationStatus_0
        MOVS     R0,#+1
        B.N      ??ADC_GetResetCalibrationStatus_1
??ADC_GetResetCalibrationStatus_0:
        MOVS     R0,#+0
??ADC_GetResetCalibrationStatus_1:
        BX       LR               ;; return

        RSEG CODE:CODE:NOROOT(2)
        THUMB
ADC_StartCalibration:
        LDR      R1,[R0, #+8]
        ORRS     R1,R1,#0x4
        STR      R1,[R0, #+8]
        BX       LR               ;; return

        RSEG CODE:CODE:NOROOT(2)
        THUMB
ADC_GetCalibrationStatus:
        MOVS     R1,R0
        MOVS     R0,#+0
        LDR      R1,[R1, #+8]
        LSLS     R1,R1,#+29
        BPL.N    ??ADC_GetCalibrationStatus_0
        MOVS     R0,#+1
        B.N      ??ADC_GetCalibrationStatus_1
??ADC_GetCalibrationStatus_0:
        MOVS     R0,#+0
??ADC_GetCalibrationStatus_1:
        BX       LR               ;; return

        RSEG CODE:CODE:NOROOT(2)
        THUMB
ADC_SoftwareStartConvCmd:
        PUSH     {R4,R5,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        CMP      R5,#+0
        BEQ.N    ??ADC_SoftwareStartConvCmd_0
        CMP      R5,#+1
        BEQ.N    ??ADC_SoftwareStartConvCmd_0
        LDR.N    R1,??ADC_SoftwareStartConvCmd_1  ;; 0x1a7
        LDR.N    R0,??DataTable13  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??ADC_SoftwareStartConvCmd_0:
        CMP      R5,#+0
        BEQ.N    ??ADC_SoftwareStartConvCmd_2
        LDR      R0,[R4, #+8]
        ORRS     R0,R0,#0x500000
        STR      R0,[R4, #+8]
        B.N      ??ADC_SoftwareStartConvCmd_3
??ADC_SoftwareStartConvCmd_2:
        LDR      R0,[R4, #+8]
        MVNS     R1,#+5242880
        ANDS     R1,R1,R0
        STR      R1,[R4, #+8]
??ADC_SoftwareStartConvCmd_3:
        POP      {R4,R5,PC}       ;; return
        DATA
??ADC_SoftwareStartConvCmd_1:
        DC32     0x1a7

        RSEG CODE:CODE:NOROOT(2)
        THUMB
ADC_GetSoftwareStartConvStatus:
        MOVS     R1,R0
        MOVS     R0,#+0
        LDR      R1,[R1, #+8]
        LSLS     R1,R1,#+9
        BPL.N    ??ADC_GetSoftwareStartConvStatus_0
        MOVS     R0,#+1
        B.N      ??ADC_GetSoftwareStartConvStatus_1
??ADC_GetSoftwareStartConvStatus_0:
        MOVS     R0,#+0
??ADC_GetSoftwareStartConvStatus_1:
        BX       LR               ;; return

        RSEG CODE:CODE:NOROOT(2)
        THUMB
ADC_DiscModeChannelCountConfig:
        PUSH     {R4,R5,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        MOVS     R0,#+0
        MOVS     R1,#+0
        CMP      R5,#+1
        BCC.N    ??ADC_DiscModeChannelCountConfig_0
        CMP      R5,#+9
        BCC.N    ??ADC_DiscModeChannelCountConfig_1
??ADC_DiscModeChannelCountConfig_0:
        LDR.N    R1,??ADC_DiscModeChannelCountConfig_2  ;; 0x1e1
        LDR.N    R0,??DataTable13  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??ADC_DiscModeChannelCountConfig_1:
        LDR      R0,[R4, #+4]
        MOVS     R1,R0
        MVNS     R0,#+57344
        ANDS     R0,R0,R1
        SUBS     R5,R5,#+1
        MOVS     R1,R5
        LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
        LSRS     R1,R1,#+24
        ORRS     R0,R0,R1, LSL #+13
        STR      R0,[R4, #+4]
        POP      {R4,R5,PC}       ;; return
        DATA
??ADC_DiscModeChannelCountConfig_2:
        DC32     0x1e1

        RSEG CODE:CODE:NOROOT(2)
        THUMB
ADC_DiscModeCmd:
        PUSH     {R4,R5,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        CMP      R5,#+0
        BEQ.N    ??ADC_DiscModeCmd_0
        CMP      R5,#+1
        BEQ.N    ??ADC_DiscModeCmd_0
        MOVS     R1,#+508
        LDR.N    R0,??DataTable13  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??ADC_DiscModeCmd_0:
        CMP      R5,#+0
        BEQ.N    ??ADC_DiscModeCmd_1
        LDR      R0,[R4, #+4]
        ORRS     R0,R0,#0x800
        STR      R0,[R4, #+4]
        B.N      ??ADC_DiscModeCmd_2
??ADC_DiscModeCmd_1:
        LDR      R0,[R4, #+4]
        MVNS     R1,#+2048
        ANDS     R1,R1,R0
        STR      R1,[R4, #+4]
??ADC_DiscModeCmd_2:
        POP      {R4,R5,PC}       ;; return

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable13:
        DC32     `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`

        RSEG CODE:CODE:NOROOT(2)
        THUMB
ADC_RegularChannelConfig:
        PUSH     {R4-R7,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        MOVS     R6,R2
        MOVS     R7,R3
        MOVS     R0,#+0
        MOVS     R1,#+0
        CMP      R5,#+0
        BEQ.N    ??ADC_RegularChannelConfig_0
        CMP      R5,#+1
        BEQ.N    ??ADC_RegularChannelConfig_0
        CMP      R5,#+2
        BEQ.N    ??ADC_RegularChannelConfig_0
        CMP      R5,#+3
        BEQ.N    ??ADC_RegularChannelConfig_0
        CMP      R5,#+4
        BEQ.N    ??ADC_RegularChannelConfig_0
        CMP      R5,#+5
        BEQ.N    ??ADC_RegularChannelConfig_0
        CMP      R5,#+6
        BEQ.N    ??ADC_RegularChannelConfig_0
        CMP      R5,#+7
        BEQ.N    ??ADC_RegularChannelConfig_0
        CMP      R5,#+8
        BEQ.N    ??ADC_RegularChannelConfig_0
        CMP      R5,#+9
        BEQ.N    ??ADC_RegularChannelConfig_0
        CMP      R5,#+10
        BEQ.N    ??ADC_RegularChannelConfig_0
        CMP      R5,#+11
        BEQ.N    ??ADC_RegularChannelConfig_0
        CMP      R5,#+12
        BEQ.N    ??ADC_RegularChannelConfig_0
        CMP      R5,#+13
        BEQ.N    ??ADC_RegularChannelConfig_0
        CMP      R5,#+14
        BEQ.N    ??ADC_RegularChannelConfig_0
        CMP      R5,#+15
        BEQ.N    ??ADC_RegularChannelConfig_0
        CMP      R5,#+16
        BEQ.N    ??ADC_RegularChannelConfig_0
        CMP      R5,#+17
        BEQ.N    ??ADC_RegularChannelConfig_0
        MOVS     R1,#+568
        LDR.N    R0,??DataTable23  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??ADC_RegularChannelConfig_0:
        CMP      R6,#+1
        BCC.N    ??ADC_RegularChannelConfig_1
        CMP      R6,#+17
        BCC.N    ??ADC_RegularChannelConfig_2
??ADC_RegularChannelConfig_1:
        LDR.N    R1,??ADC_RegularChannelConfig_3  ;; 0x239
        LDR.N    R0,??DataTable23  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??ADC_RegularChannelConfig_2:
        CMP      R7,#+0
        BEQ.N    ??ADC_RegularChannelConfig_4
        CMP      R7,#+1
        BEQ.N    ??ADC_RegularChannelConfig_4
        CMP      R7,#+2
        BEQ.N    ??ADC_RegularChannelConfig_4
        CMP      R7,#+3
        BEQ.N    ??ADC_RegularChannelConfig_4
        CMP      R7,#+4
        BEQ.N    ??ADC_RegularChannelConfig_4
        CMP      R7,#+5
        BEQ.N    ??ADC_RegularChannelConfig_4
        CMP      R7,#+6
        BEQ.N    ??ADC_RegularChannelConfig_4
        CMP      R7,#+7
        BEQ.N    ??ADC_RegularChannelConfig_4
        LDR.N    R1,??ADC_RegularChannelConfig_3+0x4  ;; 0x23a
        LDR.N    R0,??DataTable23  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??ADC_RegularChannelConfig_4:
        CMP      R5,#+10
        BCC.N    ??ADC_RegularChannelConfig_5
        LDR      R0,[R4, #+12]
        MOVS     R1,#+7
        MOVS     R3,R5
        ADDS     R3,R3,#+246
        MOVS     R2,#+3
        MULS     R3,R2,R3
        LSLS     R1,R1,R3
        BICS     R0,R0,R1
        MOVS     R1,R5
        ADDS     R1,R1,#+246
        MOVS     R2,#+3
        MULS     R1,R2,R1
        LSLS     R7,R7,R1
        MOVS     R1,R7
        MOVS     R2,R0
        MOVS     R0,R1
        ORRS     R0,R0,R2
        STR      R0,[R4, #+12]
        B.N      ??ADC_RegularChannelConfig_6
??ADC_RegularChannelConfig_5:
        LDR      R0,[R4, #+16]
        MOVS     R1,#+7
        MOVS     R2,#+3
        MULS     R2,R5,R2
        LSLS     R1,R1,R2
        BICS     R0,R0,R1
        MOVS     R1,#+3
        MULS     R1,R5,R1
        LSLS     R7,R7,R1
        MOVS     R1,R7
        MOVS     R2,R0
        MOVS     R0,R1
        ORRS     R0,R0,R2
        STR      R0,[R4, #+16]
??ADC_RegularChannelConfig_6:
        CMP      R6,#+7
        BCS.N    ??ADC_RegularChannelConfig_7
        LDR      R0,[R4, #+52]
        MOVS     R1,#+31
        MOVS     R2,R6
        SUBS     R2,R2,#+1
        MOVS     R3,#+5
        MULS     R2,R3,R2
        LSLS     R1,R1,R2
        BICS     R0,R0,R1
        SUBS     R6,R6,#+1
        MOVS     R1,#+5
        MULS     R6,R1,R6
        LSLS     R5,R5,R6
        MOVS     R1,R5
        MOVS     R2,R0
        MOVS     R0,R1
        ORRS     R0,R0,R2
        STR      R0,[R4, #+52]
        B.N      ??ADC_RegularChannelConfig_8
??ADC_RegularChannelConfig_7:
        CMP      R6,#+13
        BCS.N    ??ADC_RegularChannelConfig_9
        LDR      R0,[R4, #+48]
        MOVS     R1,#+31
        MOVS     R2,R6
        ADDS     R2,R2,#+249
        MOVS     R3,#+5
        MULS     R2,R3,R2
        LSLS     R1,R1,R2
        BICS     R0,R0,R1
        ADDS     R6,R6,#+249
        MOVS     R1,#+5
        MULS     R6,R1,R6
        LSLS     R5,R5,R6
        MOVS     R1,R5
        MOVS     R2,R0
        MOVS     R0,R1
        ORRS     R0,R0,R2
        STR      R0,[R4, #+48]
        B.N      ??ADC_RegularChannelConfig_8
??ADC_RegularChannelConfig_9:
        LDR      R0,[R4, #+44]
        MOVS     R1,#+31
        MOVS     R2,R6
        ADDS     R2,R2,#+243
        MOVS     R3,#+5
        MULS     R2,R3,R2
        LSLS     R1,R1,R2
        BICS     R0,R0,R1
        ADDS     R6,R6,#+243
        MOVS     R1,#+5
        MULS     R6,R1,R6
        LSLS     R5,R5,R6
        MOVS     R1,R5
        MOVS     R2,R0
        MOVS     R0,R1
        ORRS     R0,R0,R2
        STR      R0,[R4, #+44]
??ADC_RegularChannelConfig_8:
        POP      {R4-R7,PC}       ;; return
        Nop      
        DATA
??ADC_RegularChannelConfig_3:
        DC32     0x239
        DC32     0x23a

        RSEG CODE:CODE:NOROOT(2)
        THUMB
ADC_ExternalTrigConvCmd:
        PUSH     {R4,R5,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        CMP      R5,#+0
        BEQ.N    ??ADC_ExternalTrigConvCmd_0
        CMP      R5,#+1
        BEQ.N    ??ADC_ExternalTrigConvCmd_0
        LDR.N    R1,??ADC_ExternalTrigConvCmd_1  ;; 0x29a
        LDR.N    R0,??DataTable23  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??ADC_ExternalTrigConvCmd_0:
        CMP      R5,#+0
        BEQ.N    ??ADC_ExternalTrigConvCmd_2
        LDR      R0,[R4, #+8]
        ORRS     R0,R0,#0x100000
        STR      R0,[R4, #+8]
        B.N      ??ADC_ExternalTrigConvCmd_3
??ADC_ExternalTrigConvCmd_2:
        LDR      R0,[R4, #+8]
        MVNS     R1,#+1048576
        ANDS     R1,R1,R0
        STR      R1,[R4, #+8]
??ADC_ExternalTrigConvCmd_3:
        POP      {R4,R5,PC}       ;; return
        DATA
??ADC_ExternalTrigConvCmd_1:
        DC32     0x29a

        RSEG CODE:CODE:NOROOT(2)
        THUMB
ADC_GetConversionValue:
        LDR      R0,[R0, #+76]
        LSLS     R0,R0,#+16       ;; ZeroExtS R0,R0,#+16,#+16
        LSRS     R0,R0,#+16
        BX       LR               ;; return

        RSEG CODE:CODE:NOROOT(2)
        THUMB
ADC_GetDualModeConversionValue:
        LDR.N    R0,??DataTable18  ;; ADC1
        LDR      R0,[R0, #+0]
        LDR      R0,[R0, #+76]
        BX       LR               ;; return

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable18:
        DC32     ADC1

        RSEG CODE:CODE:NOROOT(2)
        THUMB
ADC_AutoInjectedConvCmd:
        PUSH     {R4,R5,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        CMP      R5,#+0
        BEQ.N    ??ADC_AutoInjectedConvCmd_0
        CMP      R5,#+1
        BEQ.N    ??ADC_AutoInjectedConvCmd_0
        LDR.N    R1,??ADC_AutoInjectedConvCmd_1  ;; 0x2cf
        LDR.N    R0,??DataTable23  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??ADC_AutoInjectedConvCmd_0:
        CMP      R5,#+0
        BEQ.N    ??ADC_AutoInjectedConvCmd_2
        LDR      R0,[R4, #+4]
        ORRS     R0,R0,#0x400
        STR      R0,[R4, #+4]
        B.N      ??ADC_AutoInjectedConvCmd_3
??ADC_AutoInjectedConvCmd_2:
        LDR      R0,[R4, #+4]
        MVNS     R1,#+1024
        ANDS     R1,R1,R0
        STR      R1,[R4, #+4]
??ADC_AutoInjectedConvCmd_3:
        POP      {R4,R5,PC}       ;; return
        DATA
??ADC_AutoInjectedConvCmd_1:
        DC32     0x2cf

        RSEG CODE:CODE:NOROOT(2)
        THUMB
ADC_InjectedDiscModeCmd:
        PUSH     {R4,R5,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        CMP      R5,#+0
        BEQ.N    ??ADC_InjectedDiscModeCmd_0
        CMP      R5,#+1
        BEQ.N    ??ADC_InjectedDiscModeCmd_0
        LDR.N    R1,??ADC_InjectedDiscModeCmd_1  ;; 0x2eb
        LDR.N    R0,??DataTable23  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??ADC_InjectedDiscModeCmd_0:
        CMP      R5,#+0
        BEQ.N    ??ADC_InjectedDiscModeCmd_2
        LDR      R0,[R4, #+4]
        ORRS     R0,R0,#0x1000
        STR      R0,[R4, #+4]
        B.N      ??ADC_InjectedDiscModeCmd_3
??ADC_InjectedDiscModeCmd_2:
        LDR      R0,[R4, #+4]
        MVNS     R1,#+4096
        ANDS     R1,R1,R0
        STR      R1,[R4, #+4]
??ADC_InjectedDiscModeCmd_3:
        POP      {R4,R5,PC}       ;; return
        DATA
??ADC_InjectedDiscModeCmd_1:
        DC32     0x2eb

        RSEG CODE:CODE:NOROOT(2)
        THUMB
ADC_ExternalTrigInjectedConvConfig:
        PUSH     {R4,R5,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        MOVS     R0,#+0
        CMP      R5,#+0
        BEQ.N    ??ADC_ExternalTrigInjectedConvConfig_0
        CMP      R5,#+4096
        BEQ.N    ??ADC_ExternalTrigInjectedConvConfig_0
        CMP      R5,#+8192
        BEQ.N    ??ADC_ExternalTrigInjectedConvConfig_0
        CMP      R5,#+12288
        BEQ.N    ??ADC_ExternalTrigInjectedConvConfig_0
        CMP      R5,#+16384
        BEQ.N    ??ADC_ExternalTrigInjectedConvConfig_0
        CMP      R5,#+20480
        BEQ.N    ??ADC_ExternalTrigInjectedConvConfig_0
        CMP      R5,#+24576
        BEQ.N    ??ADC_ExternalTrigInjectedConvConfig_0
        CMP      R5,#+28672
        BEQ.N    ??ADC_ExternalTrigInjectedConvConfig_0
        MOVS     R1,#+792
        LDR.N    R0,??DataTable23  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??ADC_ExternalTrigInjectedConvConfig_0:
        LDR      R0,[R4, #+8]
        MOVS     R1,R0
        MVNS     R0,#+28672
        ANDS     R0,R0,R1
        ORRS     R5,R5,R0
        MOVS     R0,R5
        STR      R0,[R4, #+8]
        POP      {R4,R5,PC}       ;; return

        RSEG CODE:CODE:NOROOT(2)
        THUMB
ADC_ExternalTrigInjectedConvCmd:
        PUSH     {R4,R5,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        CMP      R5,#+0
        BEQ.N    ??ADC_ExternalTrigInjectedConvCmd_0
        CMP      R5,#+1
        BEQ.N    ??ADC_ExternalTrigInjectedConvCmd_0
        LDR.N    R1,??ADC_ExternalTrigInjectedConvCmd_1  ;; 0x332
        LDR.N    R0,??DataTable23  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??ADC_ExternalTrigInjectedConvCmd_0:
        CMP      R5,#+0
        BEQ.N    ??ADC_ExternalTrigInjectedConvCmd_2
        LDR      R0,[R4, #+8]
        ORRS     R0,R0,#0x8000
        STR      R0,[R4, #+8]
        B.N      ??ADC_ExternalTrigInjectedConvCmd_3
??ADC_ExternalTrigInjectedConvCmd_2:
        LDR      R0,[R4, #+8]
        MVNS     R1,#+32768
        ANDS     R1,R1,R0
        STR      R1,[R4, #+8]
??ADC_ExternalTrigInjectedConvCmd_3:
        POP      {R4,R5,PC}       ;; return
        DATA
??ADC_ExternalTrigInjectedConvCmd_1:
        DC32     0x332

        RSEG CODE:CODE:NOROOT(2)
        THUMB
ADC_SoftwareStartInjectedConvCmd:
        PUSH     {R4,R5,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        CMP      R5,#+0
        BEQ.N    ??ADC_SoftwareStartInjectedConvCmd_0
        CMP      R5,#+1
        BEQ.N    ??ADC_SoftwareStartInjectedConvCmd_0
        LDR.N    R1,??ADC_SoftwareStartInjectedConvCmd_1  ;; 0x34e
        LDR.N    R0,??DataTable23  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??ADC_SoftwareStartInjectedConvCmd_0:
        CMP      R5,#+0
        BEQ.N    ??ADC_SoftwareStartInjectedConvCmd_2
        LDR      R0,[R4, #+8]
        ORRS     R0,R0,#0x208000
        STR      R0,[R4, #+8]
        B.N      ??ADC_SoftwareStartInjectedConvCmd_3
??ADC_SoftwareStartInjectedConvCmd_2:
        LDR      R0,[R4, #+8]
        MVNS     R1,#+2129920
        ANDS     R1,R1,R0
        STR      R1,[R4, #+8]
??ADC_SoftwareStartInjectedConvCmd_3:
        POP      {R4,R5,PC}       ;; return
        DATA
??ADC_SoftwareStartInjectedConvCmd_1:
        DC32     0x34e

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable23:
        DC32     `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`

        RSEG CODE:CODE:NOROOT(2)
        THUMB
ADC_GetSoftwareStartInjectedConvCmdStatus:
        MOVS     R1,R0
        MOVS     R0,#+0
        LDR      R1,[R1, #+8]
        LSLS     R1,R1,#+10
        BPL.N    ??ADC_GetSoftwareStartInjectedConvCmdStatus_0
        MOVS     R0,#+1
        B.N      ??ADC_GetSoftwareStartInjectedConvCmdStatus_1
??ADC_GetSoftwareStartInjectedConvCmdStatus_0:
        MOVS     R0,#+0
??ADC_GetSoftwareStartInjectedConvCmdStatus_1:
        BX       LR               ;; return

        RSEG CODE:CODE:NOROOT(2)
        THUMB
ADC_InjectedChannelConfig:
        PUSH     {R4-R7,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        MOVS     R6,R2
        MOVS     R7,R3
        MOVS     R1,#+0
        MOVS     R0,#+0
        MOVS     R2,#+0
        CMP      R5,#+0
        BEQ.N    ??ADC_InjectedChannelConfig_0
        CMP      R5,#+1
        BEQ.N    ??ADC_InjectedChannelConfig_0
        CMP      R5,#+2
        BEQ.N    ??ADC_InjectedChannelConfig_0
        CMP      R5,#+3
        BEQ.N    ??ADC_InjectedChannelConfig_0
        CMP      R5,#+4
        BEQ.N    ??ADC_InjectedChannelConfig_0
        CMP      R5,#+5
        BEQ.N    ??ADC_InjectedChannelConfig_0
        CMP      R5,#+6
        BEQ.N    ??ADC_InjectedChannelConfig_0
        CMP      R5,#+7
        BEQ.N    ??ADC_InjectedChannelConfig_0
        CMP      R5,#+8
        BEQ.N    ??ADC_InjectedChannelConfig_0
        CMP      R5,#+9
        BEQ.N    ??ADC_InjectedChannelConfig_0
        CMP      R5,#+10
        BEQ.N    ??ADC_InjectedChannelConfig_0
        CMP      R5,#+11
        BEQ.N    ??ADC_InjectedChannelConfig_0
        CMP      R5,#+12
        BEQ.N    ??ADC_InjectedChannelConfig_0
        CMP      R5,#+13
        BEQ.N    ??ADC_InjectedChannelConfig_0
        CMP      R5,#+14
        BEQ.N    ??ADC_InjectedChannelConfig_0
        CMP      R5,#+15
        BEQ.N    ??ADC_InjectedChannelConfig_0
        CMP      R5,#+16
        BEQ.N    ??ADC_InjectedChannelConfig_0
        CMP      R5,#+17
        BEQ.N    ??ADC_InjectedChannelConfig_0
        LDR.N    R1,??ADC_InjectedChannelConfig_1  ;; 0x3a7
        LDR.N    R0,??DataTable40  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??ADC_InjectedChannelConfig_0:
        CMP      R6,#+1
        BCC.N    ??ADC_InjectedChannelConfig_2
        CMP      R6,#+5
        BCC.N    ??ADC_InjectedChannelConfig_3
??ADC_InjectedChannelConfig_2:
        MOVS     R1,#+936
        LDR.N    R0,??DataTable40  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??ADC_InjectedChannelConfig_3:
        CMP      R7,#+0
        BEQ.N    ??ADC_InjectedChannelConfig_4
        CMP      R7,#+1
        BEQ.N    ??ADC_InjectedChannelConfig_4
        CMP      R7,#+2
        BEQ.N    ??ADC_InjectedChannelConfig_4
        CMP      R7,#+3
        BEQ.N    ??ADC_InjectedChannelConfig_4
        CMP      R7,#+4
        BEQ.N    ??ADC_InjectedChannelConfig_4
        CMP      R7,#+5
        BEQ.N    ??ADC_InjectedChannelConfig_4
        CMP      R7,#+6
        BEQ.N    ??ADC_InjectedChannelConfig_4
        CMP      R7,#+7
        BEQ.N    ??ADC_InjectedChannelConfig_4
        LDR.N    R1,??ADC_InjectedChannelConfig_1+0x4  ;; 0x3a9
        LDR.N    R0,??DataTable40  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??ADC_InjectedChannelConfig_4:
        CMP      R5,#+10
        BCC.N    ??ADC_InjectedChannelConfig_5
        LDR      R1,[R4, #+12]
        MOVS     R0,#+7
        MOVS     R2,R5
        ADDS     R2,R2,#+246
        MOVS     R3,#+3
        MULS     R2,R3,R2
        LSLS     R0,R0,R2
        BICS     R1,R1,R0
        MOVS     R0,R5
        ADDS     R0,R0,#+246
        MOVS     R2,#+3
        MULS     R0,R2,R0
        LSLS     R7,R7,R0
        MOVS     R0,R7
        MOVS     R2,R1
        MOVS     R1,R0
        ORRS     R1,R1,R2
        STR      R1,[R4, #+12]
        B.N      ??ADC_InjectedChannelConfig_6
??ADC_InjectedChannelConfig_5:
        LDR      R1,[R4, #+16]
        MOVS     R0,#+7
        MOVS     R2,#+3
        MULS     R2,R5,R2
        LSLS     R0,R0,R2
        BICS     R1,R1,R0
        MOVS     R0,#+3
        MULS     R0,R5,R0
        LSLS     R7,R7,R0
        MOVS     R0,R7
        MOVS     R2,R1
        MOVS     R1,R0
        ORRS     R1,R1,R2
        STR      R1,[R4, #+16]
??ADC_InjectedChannelConfig_6:
        LDR      R1,[R4, #+56]
        ANDS     R0,R1,#0x300000
        MOVS     R2,R0
        LSRS     R2,R2,#+20
        MOVS     R0,#+31
        MOVS     R3,R6
        ADDS     R3,R3,#+3
        SUBS     R3,R3,R2
        SUBS     R3,R3,#+1
        MOVS     R7,#+5
        MULS     R3,R7,R3
        LSLS     R0,R0,R3
        BICS     R1,R1,R0
        ADDS     R6,R6,#+3
        SUBS     R0,R6,R2
        SUBS     R0,R0,#+1
        MOVS     R2,#+5
        MULS     R0,R2,R0
        LSLS     R5,R5,R0
        MOVS     R0,R5
        MOVS     R2,R1
        MOVS     R1,R0
        ORRS     R1,R1,R2
        STR      R1,[R4, #+56]
        POP      {R4-R7,PC}       ;; return
        DATA
??ADC_InjectedChannelConfig_1:
        DC32     0x3a7
        DC32     0x3a9

        RSEG CODE:CODE:NOROOT(2)
        THUMB
ADC_InjectedSequencerLengthConfig:
        PUSH     {R4,R5,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        MOVS     R0,#+0
        MOVS     R1,#+0
        CMP      R5,#+1
        BCC.N    ??ADC_InjectedSequencerLengthConfig_0
        CMP      R5,#+5
        BCC.N    ??ADC_InjectedSequencerLengthConfig_1
??ADC_InjectedSequencerLengthConfig_0:
        LDR.N    R1,??ADC_InjectedSequencerLengthConfig_2  ;; 0x3eb
        LDR.N    R0,??DataTable40  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??ADC_InjectedSequencerLengthConfig_1:
        LDR      R0,[R4, #+56]
        MOVS     R1,R0
        MVNS     R0,#+3145728
        ANDS     R0,R0,R1
        SUBS     R5,R5,#+1
        MOVS     R1,R5
        LSLS     R1,R1,#+24       ;; ZeroExtS R1,R1,#+24,#+24
        LSRS     R1,R1,#+24
        ORRS     R0,R0,R1, LSL #+20
        STR      R0,[R4, #+56]
        POP      {R4,R5,PC}       ;; return
        DATA
??ADC_InjectedSequencerLengthConfig_2:
        DC32     0x3eb

        RSEG CODE:CODE:NOROOT(2)
        THUMB
ADC_SetInjectedOffset:
        PUSH     {R4-R6,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        MOVS     R6,R2
        CMP      R5,#+20
        BEQ.N    ??ADC_SetInjectedOffset_0
        CMP      R5,#+24
        BEQ.N    ??ADC_SetInjectedOffset_0
        CMP      R5,#+28
        BEQ.N    ??ADC_SetInjectedOffset_0
        CMP      R5,#+32
        BEQ.N    ??ADC_SetInjectedOffset_0
        LDR.N    R1,??ADC_SetInjectedOffset_1  ;; 0x40b
        LDR.N    R0,??DataTable40  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??ADC_SetInjectedOffset_0:
        MOVS     R0,#+4096
        CMP      R6,R0
        BCC.N    ??ADC_SetInjectedOffset_2
        LDR.N    R1,??ADC_SetInjectedOffset_1+0x4  ;; 0x40c
        LDR.N    R0,??DataTable40  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??ADC_SetInjectedOffset_2:
        STR      R6,[R4, R5]
        POP      {R4-R6,PC}       ;; return
        DATA
??ADC_SetInjectedOffset_1:
        DC32     0x40b
        DC32     0x40c

        RSEG CODE:CODE:NOROOT(2)
        THUMB
ADC_GetInjectedConversionValue:
        PUSH     {R4,R5,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        CMP      R5,#+20
        BEQ.N    ??ADC_GetInjectedConversionValue_0
        CMP      R5,#+24
        BEQ.N    ??ADC_GetInjectedConversionValue_0
        CMP      R5,#+28
        BEQ.N    ??ADC_GetInjectedConversionValue_0
        CMP      R5,#+32
        BEQ.N    ??ADC_GetInjectedConversionValue_0
        LDR.N    R1,??ADC_GetInjectedConversionValue_1  ;; 0x422
        LDR.N    R0,??DataTable40  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??ADC_GetInjectedConversionValue_0:
        ADDS     R0,R4,R5
        LDR      R0,[R0, #+40]
        LSLS     R0,R0,#+16       ;; ZeroExtS R0,R0,#+16,#+16
        LSRS     R0,R0,#+16
        POP      {R4,R5,PC}       ;; return
        DATA
??ADC_GetInjectedConversionValue_1:
        DC32     0x422

        RSEG CODE:CODE:NOROOT(2)
        THUMB
ADC_AnalogWatchdogCmd:
        PUSH     {R4,R5,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        MOVS     R0,#+0
        LDR.N    R1,??ADC_AnalogWatchdogCmd_0  ;; 0x800200
        CMP      R5,R1
        BEQ.N    ??ADC_AnalogWatchdogCmd_1
        LDR.N    R0,??ADC_AnalogWatchdogCmd_0+0x4  ;; 0x400200
        CMP      R5,R0
        BEQ.N    ??ADC_AnalogWatchdogCmd_1
        LDR.N    R0,??ADC_AnalogWatchdogCmd_0+0x8  ;; 0xc00200
        CMP      R5,R0
        BEQ.N    ??ADC_AnalogWatchdogCmd_1
        CMP      R5,#+8388608
        BEQ.N    ??ADC_AnalogWatchdogCmd_1
        CMP      R5,#+4194304
        BEQ.N    ??ADC_AnalogWatchdogCmd_1
        CMP      R5,#+12582912
        BEQ.N    ??ADC_AnalogWatchdogCmd_1
        CMP      R5,#+0
        BEQ.N    ??ADC_AnalogWatchdogCmd_1
        LDR.N    R1,??ADC_AnalogWatchdogCmd_0+0xC  ;; 0x445
        LDR.N    R0,??DataTable40  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??ADC_AnalogWatchdogCmd_1:
        LDR      R0,[R4, #+4]
        MOVS     R1,R0
        LDR.N    R0,??ADC_AnalogWatchdogCmd_0+0x10  ;; 0xffffffffff3ffdff
        ANDS     R0,R0,R1
        ORRS     R5,R5,R0
        MOVS     R0,R5
        STR      R0,[R4, #+4]
        POP      {R4,R5,PC}       ;; return
        DATA
??ADC_AnalogWatchdogCmd_0:
        DC32     0x800200
        DC32     0x400200
        DC32     0xc00200
        DC32     0x445
        DC32     0xffffffffff3ffdff

        RSEG CODE:CODE:NOROOT(2)
        THUMB
ADC_AnalogWatchdogThresholdsConfig:
        PUSH     {R4-R6,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        MOVS     R6,R2
        MOVS     R0,#+4096
        CMP      R5,R0
        BCC.N    ??ADC_AnalogWatchdogThresholdsConfig_0
        MOVS     R1,#+1120
        LDR.N    R0,??DataTable40  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??ADC_AnalogWatchdogThresholdsConfig_0:
        MOVS     R0,#+4096
        CMP      R6,R0
        BCC.N    ??ADC_AnalogWatchdogThresholdsConfig_1
        LDR.N    R1,??ADC_AnalogWatchdogThresholdsConfig_2  ;; 0x461
        LDR.N    R0,??DataTable40  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??ADC_AnalogWatchdogThresholdsConfig_1:
        STR      R5,[R4, #+36]
        STR      R6,[R4, #+40]
        POP      {R4-R6,PC}       ;; return
        DATA
??ADC_AnalogWatchdogThresholdsConfig_2:
        DC32     0x461

        RSEG CODE:CODE:NOROOT(2)
        THUMB
ADC_AnalogWatchdogSingleChannelConfig:
        PUSH     {R4,R5,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        MOVS     R0,#+0
        CMP      R5,#+0
        BEQ.N    ??ADC_AnalogWatchdogSingleChannelConfig_0
        CMP      R5,#+1
        BEQ.N    ??ADC_AnalogWatchdogSingleChannelConfig_0
        CMP      R5,#+2
        BEQ.N    ??ADC_AnalogWatchdogSingleChannelConfig_0
        CMP      R5,#+3
        BEQ.N    ??ADC_AnalogWatchdogSingleChannelConfig_0
        CMP      R5,#+4
        BEQ.N    ??ADC_AnalogWatchdogSingleChannelConfig_0
        CMP      R5,#+5
        BEQ.N    ??ADC_AnalogWatchdogSingleChannelConfig_0
        CMP      R5,#+6
        BEQ.N    ??ADC_AnalogWatchdogSingleChannelConfig_0
        CMP      R5,#+7
        BEQ.N    ??ADC_AnalogWatchdogSingleChannelConfig_0
        CMP      R5,#+8
        BEQ.N    ??ADC_AnalogWatchdogSingleChannelConfig_0
        CMP      R5,#+9
        BEQ.N    ??ADC_AnalogWatchdogSingleChannelConfig_0
        CMP      R5,#+10
        BEQ.N    ??ADC_AnalogWatchdogSingleChannelConfig_0
        CMP      R5,#+11
        BEQ.N    ??ADC_AnalogWatchdogSingleChannelConfig_0
        CMP      R5,#+12
        BEQ.N    ??ADC_AnalogWatchdogSingleChannelConfig_0
        CMP      R5,#+13
        BEQ.N    ??ADC_AnalogWatchdogSingleChannelConfig_0
        CMP      R5,#+14
        BEQ.N    ??ADC_AnalogWatchdogSingleChannelConfig_0
        CMP      R5,#+15
        BEQ.N    ??ADC_AnalogWatchdogSingleChannelConfig_0
        CMP      R5,#+16
        BEQ.N    ??ADC_AnalogWatchdogSingleChannelConfig_0
        CMP      R5,#+17
        BEQ.N    ??ADC_AnalogWatchdogSingleChannelConfig_0
        LDR.N    R1,??ADC_AnalogWatchdogSingleChannelConfig_1  ;; 0x48a
        LDR.N    R0,??DataTable40  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??ADC_AnalogWatchdogSingleChannelConfig_0:
        LDR      R0,[R4, #+4]
        MOVS     R1,#+31
        BICS     R0,R0,R1
        ORRS     R5,R5,R0
        MOVS     R0,R5
        STR      R0,[R4, #+4]
        POP      {R4,R5,PC}       ;; return
        Nop      
        DATA
??ADC_AnalogWatchdogSingleChannelConfig_1:
        DC32     0x48a

        RSEG CODE:CODE:NOROOT(2)
        THUMB
ADC_TempSensorVrefintCmd:
        PUSH     {R4,LR}
        MOVS     R4,R0
        CMP      R4,#+0
        BEQ.N    ??ADC_TempSensorVrefintCmd_0
        CMP      R4,#+1
        BEQ.N    ??ADC_TempSensorVrefintCmd_0
        LDR.N    R1,??ADC_TempSensorVrefintCmd_1  ;; 0x4a1
        LDR.N    R0,??DataTable40  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??ADC_TempSensorVrefintCmd_0:
        CMP      R4,#+0
        BEQ.N    ??ADC_TempSensorVrefintCmd_2
        LDR.N    R0,??DataTable39  ;; ADC1
        LDR      R0,[R0, #+0]
        LDR.N    R1,??DataTable39  ;; ADC1
        LDR      R1,[R1, #+0]
        LDR      R1,[R1, #+8]
        ORRS     R1,R1,#0x800000
        STR      R1,[R0, #+8]
        B.N      ??ADC_TempSensorVrefintCmd_3
??ADC_TempSensorVrefintCmd_2:
        LDR.N    R0,??DataTable39  ;; ADC1
        LDR      R0,[R0, #+0]
        LDR.N    R1,??DataTable39  ;; ADC1
        LDR      R1,[R1, #+0]
        LDR      R1,[R1, #+8]
        MVNS     R2,#+8388608
        ANDS     R2,R2,R1
        STR      R2,[R0, #+8]
??ADC_TempSensorVrefintCmd_3:
        POP      {R4,PC}          ;; return
        Nop      
        DATA
??ADC_TempSensorVrefintCmd_1:
        DC32     0x4a1

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable39:
        DC32     ADC1

        RSEG CODE:CODE:NOROOT(2)
        THUMB
ADC_GetFlagStatus:
        PUSH     {R4,R5,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        MOVS     R0,#+0
        CMP      R5,#+1
        BEQ.N    ??ADC_GetFlagStatus_0
        CMP      R5,#+2
        BEQ.N    ??ADC_GetFlagStatus_0
        CMP      R5,#+4
        BEQ.N    ??ADC_GetFlagStatus_0
        CMP      R5,#+8
        BEQ.N    ??ADC_GetFlagStatus_0
        CMP      R5,#+16
        BEQ.N    ??ADC_GetFlagStatus_0
        LDR.N    R1,??ADC_GetFlagStatus_1  ;; 0x4c2
        LDR.N    R0,??DataTable40  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??ADC_GetFlagStatus_0:
        LDR      R0,[R4, #+0]
        TST      R0,R5
        BEQ.N    ??ADC_GetFlagStatus_2
        MOVS     R0,#+1
        B.N      ??ADC_GetFlagStatus_3
??ADC_GetFlagStatus_2:
        MOVS     R0,#+0
??ADC_GetFlagStatus_3:
        POP      {R4,R5,PC}       ;; return
        Nop      
        DATA
??ADC_GetFlagStatus_1:
        DC32     0x4c2

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable40:
        DC32     `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`

        RSEG CODE:CODE:NOROOT(2)
        THUMB
ADC_ClearFlag:
        PUSH     {R4,R5,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        TST      R5,#0xE0
        BNE.N    ??ADC_ClearFlag_0
        CMP      R5,#+0
        BNE.N    ??ADC_ClearFlag_1
??ADC_ClearFlag_0:
        LDR.N    R1,??ADC_ClearFlag_2  ;; 0x4e4
        LDR.N    R0,??DataTable44  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??ADC_ClearFlag_1:
        LDR      R0,[R4, #+0]
        BICS     R0,R0,R5
        STR      R0,[R4, #+0]
        POP      {R4,R5,PC}       ;; return
        DATA
??ADC_ClearFlag_2:
        DC32     0x4e4

        RSEG CODE:CODE:NOROOT(2)
        THUMB
ADC_GetITStatus:
        PUSH     {R4,R5,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        MOVS     R0,#+0
        MOVS     R1,#+0
        MOVS     R2,#+544
        CMP      R5,R2
        BEQ.N    ??ADC_GetITStatus_0
        MOVS     R0,#+320
        CMP      R5,R0
        BEQ.N    ??ADC_GetITStatus_0
        MOVS     R0,#+1152
        CMP      R5,R0
        BEQ.N    ??ADC_GetITStatus_0
        LDR.N    R1,??ADC_GetITStatus_1  ;; 0x4fc
        LDR.N    R0,??DataTable44  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??ADC_GetITStatus_0:
        MOVS     R1,R5
        LSLS     R1,R1,#+16       ;; ZeroExtS R1,R1,#+16,#+16
        LSRS     R1,R1,#+16
        LSRS     R1,R1,#+8
        LDR      R0,[R4, #+4]
        ANDS     R5,R5,R0
        LDR      R0,[R4, #+0]
        TST      R0,R1
        BEQ.N    ??ADC_GetITStatus_2
        LSLS     R5,R5,#+24       ;; ZeroExtS R5,R5,#+24,#+24
        LSRS     R5,R5,#+24
        CMP      R5,#+0
        BEQ.N    ??ADC_GetITStatus_2
        MOVS     R0,#+1
        B.N      ??ADC_GetITStatus_3
??ADC_GetITStatus_2:
        MOVS     R0,#+0
??ADC_GetITStatus_3:
        POP      {R4,R5,PC}       ;; return
        DATA
??ADC_GetITStatus_1:
        DC32     0x4fc

        RSEG CODE:CODE:NOROOT(2)
        THUMB
ADC_ClearITPendingBit:
        PUSH     {R4,R5,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        MOVS     R0,#+0
        LDR.N    R1,??DataTable43  ;; 0xf81f
        TST      R5,R1
        BNE.N    ??ADC_ClearITPendingBit_0
        CMP      R5,#+0
        BNE.N    ??ADC_ClearITPendingBit_1
??ADC_ClearITPendingBit_0:
        LDR.N    R1,??ADC_ClearITPendingBit_2  ;; 0x523
        LDR.N    R0,??DataTable44  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??ADC_ClearITPendingBit_1:
        MOVS     R0,R5
        LSLS     R0,R0,#+16       ;; ZeroExtS R0,R0,#+16,#+16
        LSRS     R0,R0,#+16
        LSRS     R0,R0,#+8
        LDR      R1,[R4, #+0]
        LSLS     R0,R0,#+24       ;; ZeroExtS R0,R0,#+24,#+24
        LSRS     R0,R0,#+24
        BICS     R1,R1,R0
        STR      R1,[R4, #+0]
        POP      {R4,R5,PC}       ;; return
        Nop      
        DATA
??ADC_ClearITPendingBit_2:
        DC32     0x523

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable43:
        DC32     0xf81f

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable44:
        DC32     `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`

        RSEG CODE:CODE:NOROOT(2)
        THUMB
??RCC_APB2PeriphResetCmd??rT:
        LDR.N    R3,??Subroutine0_0  ;; RCC_APB2PeriphResetCmd
        BX       R3
        DATA
??Subroutine0_0:
        DC32     RCC_APB2PeriphResetCmd

        RSEG CODE:CODE:NOROOT(2)
        THUMB
??assert_failed??rT:
        LDR.N    R3,??Subroutine1_0  ;; assert_failed
        BX       R3
        DATA
??Subroutine1_0:
        DC32     assert_failed

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "C:\\\\David JIANG\\\\ST MCU...">`:
        DATA
        DC8 43H, 3AH, 5CH, 44H, 61H, 76H, 69H, 64H
        DC8 20H, 4AH, 49H, 41H, 4EH, 47H, 5CH, 53H
        DC8 54H, 20H, 4DH, 43H, 55H, 5CH, 44H, 6FH
        DC8 63H, 73H, 5CH, 53H, 54H, 4DH, 33H, 32H
        DC8 5CH, 41H, 4EH, 5FH, 4AH, 49H, 41H, 4EH
        DC8 47H, 5CH, 54H, 49H, 4DH, 20H, 45H, 6EH
        DC8 63H, 6FH, 64H, 65H, 72H, 5CH, 65H, 78H
        DC8 61H, 6DH, 70H, 6CH, 65H, 5CH, 46H, 57H
        DC8 4CH, 69H, 62H, 5CH, 73H, 72H, 63H, 5CH
        DC8 73H, 74H, 6DH, 33H, 32H, 66H, 31H, 30H
        DC8 78H, 5FH, 61H, 64H, 63H, 2EH, 63H, 0

        END
// 
// 2 604 bytes in segment CODE
//    88 bytes in segment DATA_C
// 
// 2 588 bytes of CODE  memory (+ 16 bytes shared)
//    88 bytes of CONST memory
//
//Errors: none
//Warnings: none
