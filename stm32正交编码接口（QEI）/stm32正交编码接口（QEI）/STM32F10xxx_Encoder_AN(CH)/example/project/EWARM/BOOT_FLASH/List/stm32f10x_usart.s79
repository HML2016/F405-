//////////////////////////////////////////////////////////////////////////////
//                                                                           /
// IAR ARM ANSI C/C++ Compiler V4.42A/W32              15/May/2008  12:06:34 /
// Copyright 1999-2005 IAR Systems. All rights reserved.                     /
//                                                                           /
//    Cpu mode        =  thumb                                               /
//    Endian          =  little                                              /
//    Stack alignment =  4                                                   /
//    Source file     =  C:\David JIANG\ST MCU\Docs\STM32\AN_JIANG\TIM       /
//                       Encoder\example\FWLib\src\stm32f10x_usart.c         /
//    Command line    =  "C:\David JIANG\ST MCU\Docs\STM32\AN_JIANG\TIM      /
//                       Encoder\example\FWLib\src\stm32f10x_usart.c" -D     /
//                       VECT_TAB_FLASH -lcN "C:\David JIANG\ST              /
//                       MCU\Docs\STM32\AN_JIANG\TIM                         /
//                       Encoder\example\project\EWARM\BOOT_FLASH\List\"     /
//                       -lb "C:\David JIANG\ST MCU\Docs\STM32\AN_JIANG\TIM  /
//                       Encoder\example\project\EWARM\BOOT_FLASH\List\" -o  /
//                       "C:\David JIANG\ST MCU\Docs\STM32\AN_JIANG\TIM      /
//                       Encoder\example\project\EWARM\BOOT_FLASH\Obj\" -z3  /
//                       --no_cse --no_unroll --no_inline --no_code_motion   /
//                       --no_tbaa --no_clustering --no_scheduling --debug   /
//                       --cpu_mode thumb --endian little --cpu cortex-M3    /
//                       --stack_align 4 --require_prototypes --fpu None     /
//                       --dlib_config "C:\Program Files\IAR                 /
//                       Systems\Embedded Workbench                          /
//                       4.0\arm\LIB\dl7mptnnl8f.h" -I "C:\David JIANG\ST    /
//                       MCU\Docs\STM32\AN_JIANG\TIM                         /
//                       Encoder\example\project\EWARM\" -I "C:\David        /
//                       JIANG\ST MCU\Docs\STM32\AN_JIANG\TIM                /
//                       Encoder\example\project\EWARM\..\include\" -I       /
//                       "C:\David JIANG\ST MCU\Docs\STM32\AN_JIANG\TIM      /
//                       Encoder\example\project\EWARM\..\..\FWLib\inc\" -I  /
//                       "C:\Program Files\IAR Systems\Embedded Workbench    /
//                       4.0\arm\INC\"                                       /
//    List file       =  C:\David JIANG\ST MCU\Docs\STM32\AN_JIANG\TIM       /
//                       Encoder\example\project\EWARM\BOOT_FLASH\List\stm32 /
//                       f10x_usart.s79                                      /
//                                                                           /
//                                                                           /
//////////////////////////////////////////////////////////////////////////////

        NAME stm32f10x_usart

        RSEG CSTACK:DATA:NOROOT(2)

??DataTable0 EQU 0
??DataTable1 EQU 0
??DataTable10 EQU 0
??DataTable12 EQU 0
??DataTable19 EQU 0
??DataTable2 EQU 0
??DataTable20 EQU 0
??DataTable21 EQU 0
??DataTable23 EQU 0
??DataTable24 EQU 0
??DataTable25 EQU 0
??DataTable26 EQU 0
??DataTable27 EQU 0
??DataTable28 EQU 0
??DataTable29 EQU 0
??DataTable3 EQU 0
??DataTable30 EQU 0
??DataTable31 EQU 0
??DataTable33 EQU 0
??DataTable34 EQU 0
??DataTable35 EQU 0
??DataTable36 EQU 0
??DataTable38 EQU 0
??DataTable4 EQU 0
??DataTable40 EQU 0
??DataTable41 EQU 0
??DataTable42 EQU 0
??DataTable43 EQU 0
??DataTable44 EQU 0
??DataTable45 EQU 0
??DataTable46 EQU 0
??DataTable5 EQU 0
??DataTable6 EQU 0
??DataTable7 EQU 0
??DataTable8 EQU 0
??DataTable9 EQU 0
        MULTWEAK ??RCC_APB1PeriphResetCmd??rT
        MULTWEAK ??RCC_APB2PeriphResetCmd??rT
        MULTWEAK ??RCC_GetClocksFreq??rT
        MULTWEAK ??assert_failed??rT
        PUBLIC USART_ClearFlag
        PUBLIC USART_ClearITPendingBit
        PUBLIC USART_Cmd
        PUBLIC USART_DMACmd
        PUBLIC USART_DeInit
        PUBLIC USART_GetFlagStatus
        PUBLIC USART_GetITStatus
        PUBLIC USART_HalfDuplexCmd
        PUBLIC USART_ITConfig
        PUBLIC USART_Init
        PUBLIC USART_IrDACmd
        PUBLIC USART_IrDAConfig
        PUBLIC USART_LINBreakDetectLengthConfig
        PUBLIC USART_LINCmd
        PUBLIC USART_ReceiveData
        PUBLIC USART_ReceiverWakeUpCmd
        PUBLIC USART_SendBreak
        PUBLIC USART_SendData
        PUBLIC USART_SetAddress
        PUBLIC USART_SetGuardTime
        PUBLIC USART_SetPrescaler
        PUBLIC USART_SmartCardCmd
        PUBLIC USART_SmartCardNACKCmd
        PUBLIC USART_StructInit
        PUBLIC USART_WakeUpConfig

RCC_APB1PeriphResetCmd SYMBOL "RCC_APB1PeriphResetCmd"
RCC_APB2PeriphResetCmd SYMBOL "RCC_APB2PeriphResetCmd"
RCC_GetClocksFreq   SYMBOL "RCC_GetClocksFreq"
assert_failed       SYMBOL "assert_failed"
??RCC_APB1PeriphResetCmd??rT SYMBOL "??rT", RCC_APB1PeriphResetCmd
??RCC_APB2PeriphResetCmd??rT SYMBOL "??rT", RCC_APB2PeriphResetCmd
??RCC_GetClocksFreq??rT SYMBOL "??rT", RCC_GetClocksFreq
??assert_failed??rT SYMBOL "??rT", assert_failed

        EXTERN RCC_APB1PeriphResetCmd
        EXTERN RCC_APB2PeriphResetCmd
        EXTERN RCC_GetClocksFreq
        EXTERN assert_failed


        RSEG CODE:CODE:NOROOT(2)
        THUMB
USART_DeInit:
        PUSH     {LR}
        LDR.N    R1,??USART_DeInit_0  ;; 0x40004400
        CMP      R0,R1
        BEQ.N    ??USART_DeInit_1
        LDR.N    R1,??USART_DeInit_0+0x4  ;; 0x40004800
        CMP      R0,R1
        BEQ.N    ??USART_DeInit_2
        LDR.N    R1,??DataTable11  ;; 0x40013800
        CMP      R0,R1
        BNE.N    ??USART_DeInit_3
??USART_DeInit_4:
        MOVS     R1,#+1
        MOVS     R0,#+16384
        _BLF     RCC_APB2PeriphResetCmd,??RCC_APB2PeriphResetCmd??rT
        MOVS     R1,#+0
        MOVS     R0,#+16384
        _BLF     RCC_APB2PeriphResetCmd,??RCC_APB2PeriphResetCmd??rT
        B.N      ??USART_DeInit_3
??USART_DeInit_1:
        MOVS     R1,#+1
        MOVS     R0,#+131072
        _BLF     RCC_APB1PeriphResetCmd,??RCC_APB1PeriphResetCmd??rT
        MOVS     R1,#+0
        MOVS     R0,#+131072
        _BLF     RCC_APB1PeriphResetCmd,??RCC_APB1PeriphResetCmd??rT
        B.N      ??USART_DeInit_3
??USART_DeInit_2:
        MOVS     R1,#+1
        MOVS     R0,#+262144
        _BLF     RCC_APB1PeriphResetCmd,??RCC_APB1PeriphResetCmd??rT
        MOVS     R1,#+0
        MOVS     R0,#+262144
        _BLF     RCC_APB1PeriphResetCmd,??RCC_APB1PeriphResetCmd??rT
??USART_DeInit_3:
        POP      {PC}             ;; return
        Nop      
        DATA
??USART_DeInit_0:
        DC32     0x40004400
        DC32     0x40004800

        RSEG CODE:CODE:NOROOT(2)
        THUMB
USART_Init:
        PUSH     {R4-R6,LR}
        SUB      SP,SP,#+20
        MOVS     R4,R0
        MOVS     R6,R1
        MOVS     R5,#+0
        MOVS     R0,#+0
        MOVS     R1,#+0
        MOVS     R2,#+0
        LDR      R3,[R6, #+0]
        CMP      R3,#+0
        BEQ.N    ??USART_Init_0
        LDR      R0,[R6, #+0]
        LDR.N    R1,??USART_Init_1  ;; 0x44aa21
        CMP      R0,R1
        BCC.N    ??USART_Init_2
??USART_Init_0:
        MOVS     R1,#+135
        LDR.N    R0,??DataTable22  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??USART_Init_2:
        LDRH     R0,[R6, #+4]
        CMP      R0,#+0
        BEQ.N    ??USART_Init_3
        LDRH     R0,[R6, #+4]
        MOVS     R1,#+4096
        CMP      R0,R1
        BEQ.N    ??USART_Init_3
        MOVS     R1,#+136
        LDR.N    R0,??DataTable22  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??USART_Init_3:
        LDRH     R0,[R6, #+6]
        CMP      R0,#+0
        BEQ.N    ??USART_Init_4
        LDRH     R0,[R6, #+6]
        MOVS     R1,#+4096
        CMP      R0,R1
        BEQ.N    ??USART_Init_4
        LDRH     R0,[R6, #+6]
        MOVS     R1,#+8192
        CMP      R0,R1
        BEQ.N    ??USART_Init_4
        LDRH     R0,[R6, #+6]
        MOVS     R1,#+12288
        CMP      R0,R1
        BEQ.N    ??USART_Init_4
        MOVS     R1,#+137
        LDR.N    R0,??DataTable22  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??USART_Init_4:
        LDRH     R0,[R6, #+8]
        CMP      R0,#+0
        BEQ.N    ??USART_Init_5
        LDRH     R0,[R6, #+8]
        MOVS     R1,#+1024
        CMP      R0,R1
        BEQ.N    ??USART_Init_5
        LDRH     R0,[R6, #+8]
        MOVS     R1,#+1536
        CMP      R0,R1
        BEQ.N    ??USART_Init_5
        MOVS     R1,#+138
        LDR.N    R0,??DataTable22  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??USART_Init_5:
        LDRH     R0,[R6, #+10]
        CMP      R0,#+0
        BEQ.N    ??USART_Init_6
        LDRH     R0,[R6, #+10]
        MOVS     R1,#+256
        CMP      R0,R1
        BEQ.N    ??USART_Init_6
        LDRH     R0,[R6, #+10]
        MOVS     R1,#+512
        CMP      R0,R1
        BEQ.N    ??USART_Init_6
        LDRH     R0,[R6, #+10]
        MOVS     R1,#+768
        CMP      R0,R1
        BEQ.N    ??USART_Init_6
        MOVS     R1,#+139
        LDR.N    R0,??DataTable22  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??USART_Init_6:
        LDRH     R0,[R6, #+12]
        LDR.N    R1,??USART_Init_1+0x4  ;; 0xfff3
        TST      R0,R1
        BNE.N    ??USART_Init_7
        LDRH     R0,[R6, #+12]
        CMP      R0,#+0
        BNE.N    ??USART_Init_8
??USART_Init_7:
        MOVS     R1,#+140
        LDR.N    R0,??DataTable22  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??USART_Init_8:
        LDRH     R0,[R6, #+14]
        CMP      R0,#+0
        BEQ.N    ??USART_Init_9
        LDRH     R0,[R6, #+14]
        MOVS     R1,#+2048
        CMP      R0,R1
        BEQ.N    ??USART_Init_9
        MOVS     R1,#+141
        LDR.N    R0,??DataTable22  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??USART_Init_9:
        LDRH     R0,[R6, #+16]
        CMP      R0,#+0
        BEQ.N    ??USART_Init_10
        LDRH     R0,[R6, #+16]
        MOVS     R1,#+1024
        CMP      R0,R1
        BEQ.N    ??USART_Init_10
        MOVS     R1,#+142
        LDR.N    R0,??DataTable22  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??USART_Init_10:
        LDRH     R0,[R6, #+18]
        CMP      R0,#+0
        BEQ.N    ??USART_Init_11
        LDRH     R0,[R6, #+18]
        MOVS     R1,#+512
        CMP      R0,R1
        BEQ.N    ??USART_Init_11
        MOVS     R1,#+143
        LDR.N    R0,??DataTable22  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??USART_Init_11:
        LDRH     R0,[R6, #+20]
        CMP      R0,#+0
        BEQ.N    ??USART_Init_12
        LDRH     R0,[R6, #+20]
        MOVS     R1,#+256
        CMP      R0,R1
        BEQ.N    ??USART_Init_12
        MOVS     R1,#+144
        LDR.N    R0,??DataTable22  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??USART_Init_12:
        LDRH     R5,[R4, #+16]
        MOVS     R0,R5
        LDR.N    R5,??USART_Init_1+0x8  ;; 0xc0ff
        ANDS     R5,R5,R0
        LDRH     R0,[R6, #+6]
        LDRH     R1,[R6, #+14]
        ORRS     R1,R1,R0
        LDRH     R0,[R6, #+16]
        ORRS     R0,R0,R1
        LDRH     R1,[R6, #+18]
        ORRS     R1,R1,R0
        LDRH     R0,[R6, #+20]
        ORRS     R0,R0,R1
        ORRS     R0,R0,R5
        MOVS     R5,R0
        STRH     R5,[R4, #+16]
        MOVS     R5,#+0
        LDRH     R0,[R4, #+12]
        MOVS     R5,R0
        MOVS     R0,R5
        LDR.N    R5,??USART_Init_1+0xC  ;; 0xe9f3
        ANDS     R5,R5,R0
        LDRH     R0,[R6, #+4]
        LDRH     R1,[R6, #+8]
        ORRS     R1,R1,R0
        LDRH     R0,[R6, #+12]
        ORRS     R0,R0,R1
        ORRS     R0,R0,R5
        MOVS     R5,R0
        STRH     R5,[R4, #+12]
        MOVS     R5,#+0
        LDRH     R0,[R4, #+20]
        MOVS     R5,R0
        MOVS     R0,R5
        LDR.N    R5,??USART_Init_1+0x10  ;; 0xfcff
        ANDS     R5,R5,R0
        MOVS     R0,R5
        LDRH     R5,[R6, #+10]
        ORRS     R5,R5,R0
        STRH     R5,[R4, #+20]
        MOVS     R5,#+0
        MOV      R0,SP
        _BLF     RCC_GetClocksFreq,??RCC_GetClocksFreq??rT
        LDR.N    R0,??DataTable11  ;; 0x40013800
        CMP      R4,R0
        BNE.N    ??USART_Init_13
        LDR      R0,[SP, #+12]
        B.N      ??USART_Init_14
??USART_Init_13:
        LDR      R0,[SP, #+8]
??USART_Init_14:
        MOVS     R1,#+25
        MULS     R0,R1,R0
        LDR      R1,[R6, #+0]
        MOVS     R2,#+4
        MULS     R1,R2,R1
        UDIV     R1,R0,R1
        MOVS     R0,#+100
        UDIV     R0,R1,R0
        LSLS     R5,R0,#+4
        MOVS     R0,R5
        LSRS     R0,R0,#+4
        MOVS     R2,#+100
        MLS      R2,R0,R2,R1
        MOVS     R0,#+16
        MULS     R2,R0,R2
        ADDS     R2,R2,#+50
        MOVS     R0,#+100
        UDIV     R0,R2,R0
        LSLS     R0,R0,#+28       ;; ZeroExtS R0,R0,#+28,#+28
        LSRS     R0,R0,#+28
        ORRS     R0,R0,R5
        MOVS     R5,R0
        STRH     R5,[R4, #+8]
        ADD      SP,SP,#+20
        POP      {R4-R6,PC}       ;; return
        DATA
??USART_Init_1:
        DC32     0x44aa21
        DC32     0xfff3
        DC32     0xc0ff
        DC32     0xe9f3
        DC32     0xfcff

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable11:
        DC32     0x40013800

        RSEG CODE:CODE:NOROOT(2)
        THUMB
USART_StructInit:
        MOVS     R1,#+9600
        STR      R1,[R0, #+0]
        MOVS     R1,#+0
        STRH     R1,[R0, #+4]
        MOVS     R1,#+0
        STRH     R1,[R0, #+6]
        MOVS     R1,#+0
        STRH     R1,[R0, #+8]
        MOVS     R1,#+0
        STRH     R1,[R0, #+10]
        MOVS     R1,#+12
        STRH     R1,[R0, #+12]
        MOVS     R1,#+0
        STRH     R1,[R0, #+14]
        MOVS     R1,#+0
        STRH     R1,[R0, #+16]
        MOVS     R1,#+0
        STRH     R1,[R0, #+18]
        MOVS     R1,#+0
        STRH     R1,[R0, #+20]
        BX       LR               ;; return

        RSEG CODE:CODE:NOROOT(2)
        THUMB
USART_Cmd:
        PUSH     {R4,R5,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        CMP      R5,#+0
        BEQ.N    ??USART_Cmd_0
        CMP      R5,#+1
        BEQ.N    ??USART_Cmd_0
        MOVS     R1,#+254
        LDR.N    R0,??DataTable22  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??USART_Cmd_0:
        CMP      R5,#+0
        BEQ.N    ??USART_Cmd_1
        LDRH     R0,[R4, #+12]
        ORRS     R0,R0,#0x2000
        STRH     R0,[R4, #+12]
        B.N      ??USART_Cmd_2
??USART_Cmd_1:
        LDRH     R0,[R4, #+12]
        LDR.N    R1,??USART_Cmd_3  ;; 0xdfff
        ANDS     R1,R1,R0
        STRH     R1,[R4, #+12]
??USART_Cmd_2:
        POP      {R4,R5,PC}       ;; return
        Nop      
        DATA
??USART_Cmd_3:
        DC32     0xdfff

        RSEG CODE:CODE:NOROOT(2)
        THUMB
USART_ITConfig:
        PUSH     {R4-R6,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        MOVS     R6,R2
        MOVS     R2,#+0
        MOVS     R3,#+0
        MOVS     R0,#+0
        MOVS     R1,#+0
        CMP      R5,#+40
        BEQ.N    ??USART_ITConfig_0
        LDR.N    R0,??DataTable13  ;; 0x727
        CMP      R5,R0
        BEQ.N    ??USART_ITConfig_0
        LDR.N    R0,??DataTable14  ;; 0x626
        CMP      R5,R0
        BEQ.N    ??USART_ITConfig_0
        LDR.N    R0,??DataTable15  ;; 0x525
        CMP      R5,R0
        BEQ.N    ??USART_ITConfig_0
        LDR.N    R0,??DataTable16  ;; 0x424
        CMP      R5,R0
        BEQ.N    ??USART_ITConfig_0
        LDR.N    R0,??DataTable17  ;; 0x846
        CMP      R5,R0
        BEQ.N    ??USART_ITConfig_0
        LDR.N    R0,??DataTable18  ;; 0x96a
        CMP      R5,R0
        BEQ.N    ??USART_ITConfig_0
        CMP      R5,#+96
        BEQ.N    ??USART_ITConfig_0
        LDR.N    R1,??USART_ITConfig_1  ;; 0x127
        LDR.N    R0,??DataTable22  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??USART_ITConfig_0:
        CMP      R6,#+0
        BEQ.N    ??USART_ITConfig_2
        CMP      R6,#+1
        BEQ.N    ??USART_ITConfig_2
        MOVS     R1,#+296
        LDR.N    R0,??DataTable22  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??USART_ITConfig_2:
        MOVS     R0,R5
        MOVS     R2,R0
        LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
        LSRS     R2,R2,#+24
        LSRS     R2,R2,#+5
        LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
        LSRS     R2,R2,#+24
        LSLS     R3,R5,#+27       ;; ZeroExtS R3,R5,#+27,#+27
        LSRS     R3,R3,#+27
        MOVS     R0,#+1
        LSLS     R0,R0,R3
        MOVS     R1,R4
        CMP      R2,#+1
        BNE.N    ??USART_ITConfig_3
        ADDS     R1,R1,#+12
        B.N      ??USART_ITConfig_4
??USART_ITConfig_3:
        CMP      R2,#+2
        BNE.N    ??USART_ITConfig_5
        ADDS     R1,R1,#+16
        B.N      ??USART_ITConfig_4
??USART_ITConfig_5:
        ADDS     R1,R1,#+20
??USART_ITConfig_4:
        CMP      R6,#+0
        BEQ.N    ??USART_ITConfig_6
        LDR      R2,[R1, #+0]
        ORRS     R0,R0,R2
        STR      R0,[R1, #+0]
        B.N      ??USART_ITConfig_7
??USART_ITConfig_6:
        LDR      R2,[R1, #+0]
        BICS     R2,R2,R0
        STR      R2,[R1, #+0]
??USART_ITConfig_7:
        POP      {R4-R6,PC}       ;; return
        DATA
??USART_ITConfig_1:
        DC32     0x127

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable13:
        DC32     0x727

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable14:
        DC32     0x626

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable15:
        DC32     0x525

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable16:
        DC32     0x424

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable17:
        DC32     0x846

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable18:
        DC32     0x96a

        RSEG CODE:CODE:NOROOT(2)
        THUMB
USART_DMACmd:
        PUSH     {R4-R6,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        MOVS     R6,R2
        LDR.N    R0,??USART_DMACmd_0  ;; 0xff3f
        TST      R5,R0
        BNE.N    ??USART_DMACmd_1
        CMP      R5,#+0
        BNE.N    ??USART_DMACmd_2
??USART_DMACmd_1:
        MOVS     R1,#+346
        LDR.N    R0,??DataTable22  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??USART_DMACmd_2:
        CMP      R6,#+0
        BEQ.N    ??USART_DMACmd_3
        CMP      R6,#+1
        BEQ.N    ??USART_DMACmd_3
        LDR.N    R1,??USART_DMACmd_0+0x4  ;; 0x15b
        LDR.N    R0,??DataTable22  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??USART_DMACmd_3:
        CMP      R6,#+0
        BEQ.N    ??USART_DMACmd_4
        LDRH     R0,[R4, #+20]
        ORRS     R5,R5,R0
        STRH     R5,[R4, #+20]
        B.N      ??USART_DMACmd_5
??USART_DMACmd_4:
        LDRH     R0,[R4, #+20]
        BICS     R0,R0,R5
        STRH     R0,[R4, #+20]
??USART_DMACmd_5:
        POP      {R4-R6,PC}       ;; return
        DATA
??USART_DMACmd_0:
        DC32     0xff3f
        DC32     0x15b

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable22:
        DC32     `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`

        RSEG CODE:CODE:NOROOT(2)
        THUMB
USART_SetAddress:
        PUSH     {R4,R5,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        CMP      R5,#+16
        BCC.N    ??USART_SetAddress_0
        LDR.N    R1,??USART_SetAddress_1  ;; 0x177
        LDR.N    R0,??DataTable39  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??USART_SetAddress_0:
        LDRH     R0,[R4, #+16]
        LDR.N    R1,??USART_SetAddress_1+0x4  ;; 0xfff0
        ANDS     R1,R1,R0
        STRH     R1,[R4, #+16]
        LDRH     R0,[R4, #+16]
        ORRS     R5,R5,R0
        STRH     R5,[R4, #+16]
        POP      {R4,R5,PC}       ;; return
        Nop      
        DATA
??USART_SetAddress_1:
        DC32     0x177
        DC32     0xfff0

        RSEG CODE:CODE:NOROOT(2)
        THUMB
USART_WakeUpConfig:
        PUSH     {R4,R5,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        CMP      R5,#+0
        BEQ.N    ??USART_WakeUpConfig_0
        MOVS     R0,#+2048
        CMP      R5,R0
        BEQ.N    ??USART_WakeUpConfig_0
        MOVS     R1,#+398
        LDR.N    R0,??DataTable39  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??USART_WakeUpConfig_0:
        LDRH     R0,[R4, #+12]
        LDR.N    R1,??USART_WakeUpConfig_1  ;; 0xf7ff
        ANDS     R1,R1,R0
        STRH     R1,[R4, #+12]
        LDRH     R0,[R4, #+12]
        ORRS     R5,R5,R0
        STRH     R5,[R4, #+12]
        POP      {R4,R5,PC}       ;; return
        DATA
??USART_WakeUpConfig_1:
        DC32     0xf7ff

        RSEG CODE:CODE:NOROOT(2)
        THUMB
USART_ReceiverWakeUpCmd:
        PUSH     {R4,R5,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        CMP      R5,#+0
        BEQ.N    ??USART_ReceiverWakeUpCmd_0
        CMP      R5,#+1
        BEQ.N    ??USART_ReceiverWakeUpCmd_0
        LDR.N    R1,??USART_ReceiverWakeUpCmd_1  ;; 0x1a1
        LDR.N    R0,??DataTable39  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??USART_ReceiverWakeUpCmd_0:
        CMP      R5,#+0
        BEQ.N    ??USART_ReceiverWakeUpCmd_2
        LDRH     R0,[R4, #+12]
        ORRS     R0,R0,#0x2
        STRH     R0,[R4, #+12]
        B.N      ??USART_ReceiverWakeUpCmd_3
??USART_ReceiverWakeUpCmd_2:
        LDRH     R0,[R4, #+12]
        LDR.N    R1,??DataTable37  ;; 0xfffd
        ANDS     R1,R1,R0
        STRH     R1,[R4, #+12]
??USART_ReceiverWakeUpCmd_3:
        POP      {R4,R5,PC}       ;; return
        Nop      
        DATA
??USART_ReceiverWakeUpCmd_1:
        DC32     0x1a1

        RSEG CODE:CODE:NOROOT(2)
        THUMB
USART_LINBreakDetectLengthConfig:
        PUSH     {R4,R5,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        CMP      R5,#+0
        BEQ.N    ??USART_LINBreakDetectLengthConfig_0
        CMP      R5,#+32
        BEQ.N    ??USART_LINBreakDetectLengthConfig_0
        LDR.N    R1,??USART_LINBreakDetectLengthConfig_1  ;; 0x1bf
        LDR.N    R0,??DataTable39  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??USART_LINBreakDetectLengthConfig_0:
        LDRH     R0,[R4, #+16]
        LDR.N    R1,??DataTable32  ;; 0xffdf
        ANDS     R1,R1,R0
        STRH     R1,[R4, #+16]
        LDRH     R0,[R4, #+16]
        ORRS     R5,R5,R0
        STRH     R5,[R4, #+16]
        POP      {R4,R5,PC}       ;; return
        Nop      
        DATA
??USART_LINBreakDetectLengthConfig_1:
        DC32     0x1bf

        RSEG CODE:CODE:NOROOT(2)
        THUMB
USART_LINCmd:
        PUSH     {R4,R5,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        CMP      R5,#+0
        BEQ.N    ??USART_LINCmd_0
        CMP      R5,#+1
        BEQ.N    ??USART_LINCmd_0
        MOVS     R1,#+466
        LDR.N    R0,??DataTable39  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??USART_LINCmd_0:
        CMP      R5,#+0
        BEQ.N    ??USART_LINCmd_1
        LDRH     R0,[R4, #+16]
        ORRS     R0,R0,#0x4000
        STRH     R0,[R4, #+16]
        B.N      ??USART_LINCmd_2
??USART_LINCmd_1:
        LDRH     R0,[R4, #+16]
        LDR.N    R1,??USART_LINCmd_3  ;; 0xbfff
        ANDS     R1,R1,R0
        STRH     R1,[R4, #+16]
??USART_LINCmd_2:
        POP      {R4,R5,PC}       ;; return
        DATA
??USART_LINCmd_3:
        DC32     0xbfff

        RSEG CODE:CODE:NOROOT(2)
        THUMB
USART_SendData:
        PUSH     {R4,R5,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        MOVS     R0,#+512
        CMP      R5,R0
        BCC.N    ??USART_SendData_0
        MOVS     R1,#+492
        LDR.N    R0,??DataTable39  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??USART_SendData_0:
        LSLS     R0,R5,#+23       ;; ZeroExtS R0,R5,#+23,#+23
        LSRS     R0,R0,#+23
        STRH     R0,[R4, #+4]
        POP      {R4,R5,PC}       ;; return

        RSEG CODE:CODE:NOROOT(2)
        THUMB
USART_ReceiveData:
        LDRH     R0,[R0, #+4]
        LSLS     R0,R0,#+23       ;; ZeroExtS R0,R0,#+23,#+23
        LSRS     R0,R0,#+23
        BX       LR               ;; return

        RSEG CODE:CODE:NOROOT(2)
        THUMB
USART_SendBreak:
        LDRH     R1,[R0, #+12]
        ORRS     R1,R1,#0x1
        STRH     R1,[R0, #+12]
        BX       LR               ;; return

        RSEG CODE:CODE:NOROOT(2)
        THUMB
USART_SetGuardTime:
        LDRH     R2,[R0, #+24]
        LSLS     R2,R2,#+24       ;; ZeroExtS R2,R2,#+24,#+24
        LSRS     R2,R2,#+24
        STRH     R2,[R0, #+24]
        LDRH     R2,[R0, #+24]
        ORRS     R1,R2,R1, LSL #+8
        STRH     R1,[R0, #+24]
        BX       LR               ;; return

        RSEG CODE:CODE:NOROOT(2)
        THUMB
USART_SetPrescaler:
        LDRH     R2,[R0, #+24]
        ANDS     R2,R2,#0xFF00
        STRH     R2,[R0, #+24]
        LDRH     R2,[R0, #+24]
        ORRS     R1,R1,R2
        STRH     R1,[R0, #+24]
        BX       LR               ;; return

        RSEG CODE:CODE:NOROOT(2)
        THUMB
USART_SmartCardCmd:
        PUSH     {R4,R5,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        CMP      R5,#+0
        BEQ.N    ??USART_SmartCardCmd_0
        CMP      R5,#+1
        BEQ.N    ??USART_SmartCardCmd_0
        LDR.N    R1,??USART_SmartCardCmd_1  ;; 0x23d
        LDR.N    R0,??DataTable39  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??USART_SmartCardCmd_0:
        CMP      R5,#+0
        BEQ.N    ??USART_SmartCardCmd_2
        LDRH     R0,[R4, #+20]
        ORRS     R0,R0,#0x20
        STRH     R0,[R4, #+20]
        B.N      ??USART_SmartCardCmd_3
??USART_SmartCardCmd_2:
        LDRH     R0,[R4, #+20]
        LDR.N    R1,??DataTable32  ;; 0xffdf
        ANDS     R1,R1,R0
        STRH     R1,[R4, #+20]
??USART_SmartCardCmd_3:
        POP      {R4,R5,PC}       ;; return
        Nop      
        DATA
??USART_SmartCardCmd_1:
        DC32     0x23d

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable32:
        DC32     0xffdf

        RSEG CODE:CODE:NOROOT(2)
        THUMB
USART_SmartCardNACKCmd:
        PUSH     {R4,R5,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        CMP      R5,#+0
        BEQ.N    ??USART_SmartCardNACKCmd_0
        CMP      R5,#+1
        BEQ.N    ??USART_SmartCardNACKCmd_0
        MOVS     R1,#+600
        LDR.N    R0,??DataTable39  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??USART_SmartCardNACKCmd_0:
        CMP      R5,#+0
        BEQ.N    ??USART_SmartCardNACKCmd_1
        LDRH     R0,[R4, #+20]
        ORRS     R0,R0,#0x10
        STRH     R0,[R4, #+20]
        B.N      ??USART_SmartCardNACKCmd_2
??USART_SmartCardNACKCmd_1:
        LDRH     R0,[R4, #+20]
        LDR.N    R1,??USART_SmartCardNACKCmd_3  ;; 0xffef
        ANDS     R1,R1,R0
        STRH     R1,[R4, #+20]
??USART_SmartCardNACKCmd_2:
        POP      {R4,R5,PC}       ;; return
        DATA
??USART_SmartCardNACKCmd_3:
        DC32     0xffef

        RSEG CODE:CODE:NOROOT(2)
        THUMB
USART_HalfDuplexCmd:
        PUSH     {R4,R5,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        CMP      R5,#+0
        BEQ.N    ??USART_HalfDuplexCmd_0
        CMP      R5,#+1
        BEQ.N    ??USART_HalfDuplexCmd_0
        MOVS     R1,#+628
        LDR.N    R0,??DataTable39  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??USART_HalfDuplexCmd_0:
        CMP      R5,#+0
        BEQ.N    ??USART_HalfDuplexCmd_1
        LDRH     R0,[R4, #+20]
        ORRS     R0,R0,#0x8
        STRH     R0,[R4, #+20]
        B.N      ??USART_HalfDuplexCmd_2
??USART_HalfDuplexCmd_1:
        LDRH     R0,[R4, #+20]
        LDR.N    R1,??USART_HalfDuplexCmd_3  ;; 0xfff7
        ANDS     R1,R1,R0
        STRH     R1,[R4, #+20]
??USART_HalfDuplexCmd_2:
        POP      {R4,R5,PC}       ;; return
        DATA
??USART_HalfDuplexCmd_3:
        DC32     0xfff7

        RSEG CODE:CODE:NOROOT(2)
        THUMB
USART_IrDAConfig:
        PUSH     {R4,R5,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        CMP      R5,#+4
        BEQ.N    ??USART_IrDAConfig_0
        CMP      R5,#+0
        BEQ.N    ??USART_IrDAConfig_0
        LDR.N    R1,??USART_IrDAConfig_1  ;; 0x291
        LDR.N    R0,??DataTable39  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??USART_IrDAConfig_0:
        LDRH     R0,[R4, #+20]
        LDR.N    R1,??USART_IrDAConfig_1+0x4  ;; 0xfffb
        ANDS     R1,R1,R0
        STRH     R1,[R4, #+20]
        LDRH     R0,[R4, #+20]
        ORRS     R5,R5,R0
        STRH     R5,[R4, #+20]
        POP      {R4,R5,PC}       ;; return
        Nop      
        DATA
??USART_IrDAConfig_1:
        DC32     0x291
        DC32     0xfffb

        RSEG CODE:CODE:NOROOT(2)
        THUMB
USART_IrDACmd:
        PUSH     {R4,R5,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        CMP      R5,#+0
        BEQ.N    ??USART_IrDACmd_0
        CMP      R5,#+1
        BEQ.N    ??USART_IrDACmd_0
        MOVS     R1,#+676
        LDR.N    R0,??DataTable39  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??USART_IrDACmd_0:
        CMP      R5,#+0
        BEQ.N    ??USART_IrDACmd_1
        LDRH     R0,[R4, #+20]
        ORRS     R0,R0,#0x2
        STRH     R0,[R4, #+20]
        B.N      ??USART_IrDACmd_2
??USART_IrDACmd_1:
        LDRH     R0,[R4, #+20]
        LDR.N    R1,??DataTable37  ;; 0xfffd
        ANDS     R1,R1,R0
        STRH     R1,[R4, #+20]
??USART_IrDACmd_2:
        POP      {R4,R5,PC}       ;; return

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable37:
        DC32     0xfffd

        RSEG CODE:CODE:NOROOT(2)
        THUMB
USART_GetFlagStatus:
        PUSH     {R4,R5,LR}
        MOVS     R5,R0
        MOVS     R4,R1
        MOVS     R0,#+0
        CMP      R4,#+1
        BEQ.N    ??USART_GetFlagStatus_0
        CMP      R4,#+128
        BEQ.N    ??USART_GetFlagStatus_0
        CMP      R4,#+64
        BEQ.N    ??USART_GetFlagStatus_0
        CMP      R4,#+32
        BEQ.N    ??USART_GetFlagStatus_0
        CMP      R4,#+16
        BEQ.N    ??USART_GetFlagStatus_0
        MOVS     R0,#+256
        CMP      R4,R0
        BEQ.N    ??USART_GetFlagStatus_0
        MOVS     R0,#+512
        CMP      R4,R0
        BEQ.N    ??USART_GetFlagStatus_0
        CMP      R4,#+8
        BEQ.N    ??USART_GetFlagStatus_0
        CMP      R4,#+4
        BEQ.N    ??USART_GetFlagStatus_0
        CMP      R4,#+2
        BEQ.N    ??USART_GetFlagStatus_0
        LDR.N    R1,??USART_GetFlagStatus_1  ;; 0x2cb
        LDR.N    R0,??DataTable39  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??USART_GetFlagStatus_0:
        LDRH     R0,[R5, #+0]
        TST      R0,R4
        BEQ.N    ??USART_GetFlagStatus_2
        MOVS     R0,#+1
        B.N      ??USART_GetFlagStatus_3
??USART_GetFlagStatus_2:
        MOVS     R0,#+0
??USART_GetFlagStatus_3:
        POP      {R4,R5,PC}       ;; return
        Nop      
        DATA
??USART_GetFlagStatus_1:
        DC32     0x2cb

        RSEG CODE:CODE:NOROOT(2)
        THUMB
USART_ClearFlag:
        PUSH     {R4,R5,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        TST      R5,#0xFC00
        BNE.N    ??USART_ClearFlag_0
        CMP      R5,#+0
        BNE.N    ??USART_ClearFlag_1
??USART_ClearFlag_0:
        LDR.N    R1,??USART_ClearFlag_2  ;; 0x2ef
        LDR.N    R0,??DataTable39  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??USART_ClearFlag_1:
        LDRH     R0,[R4, #+0]
        BICS     R0,R0,R5
        STRH     R0,[R4, #+0]
        POP      {R4,R5,PC}       ;; return
        DATA
??USART_ClearFlag_2:
        DC32     0x2ef

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable39:
        DC32     `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`

        RSEG CODE:CODE:NOROOT(2)
        THUMB
USART_GetITStatus:
        PUSH     {R4,R5,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        MOVS     R2,#+0
        MOVS     R1,#+0
        MOVS     R3,#+0
        MOVS     R0,#+0
        CMP      R5,#+40
        BEQ.N    ??USART_GetITStatus_0
        LDR.N    R0,??DataTable47  ;; 0x727
        CMP      R5,R0
        BEQ.N    ??USART_GetITStatus_0
        LDR.N    R0,??DataTable48  ;; 0x626
        CMP      R5,R0
        BEQ.N    ??USART_GetITStatus_0
        LDR.N    R0,??DataTable49  ;; 0x525
        CMP      R5,R0
        BEQ.N    ??USART_GetITStatus_0
        LDR.N    R0,??DataTable50  ;; 0x424
        CMP      R5,R0
        BEQ.N    ??USART_GetITStatus_0
        LDR.N    R0,??DataTable51  ;; 0x846
        CMP      R5,R0
        BEQ.N    ??USART_GetITStatus_0
        LDR.N    R0,??DataTable52  ;; 0x96a
        CMP      R5,R0
        BEQ.N    ??USART_GetITStatus_0
        MOVS     R0,#+864
        CMP      R5,R0
        BEQ.N    ??USART_GetITStatus_0
        MOVS     R0,#+608
        CMP      R5,R0
        BEQ.N    ??USART_GetITStatus_0
        MOVS     R0,#+352
        CMP      R5,R0
        BEQ.N    ??USART_GetITStatus_0
        LDR.N    R1,??USART_GetITStatus_1  ;; 0x30e
        LDR.N    R0,??DataTable53  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??USART_GetITStatus_0:
        MOVS     R0,R5
        MOVS     R3,R0
        LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
        LSRS     R3,R3,#+24
        LSRS     R3,R3,#+5
        LSLS     R3,R3,#+24       ;; ZeroExtS R3,R3,#+24,#+24
        LSRS     R3,R3,#+24
        LSLS     R5,R5,#+16       ;; ZeroExtS R5,R5,#+16,#+16
        LSRS     R5,R5,#+16
        LSLS     R1,R5,#+27       ;; ZeroExtS R1,R5,#+27,#+27
        LSRS     R1,R1,#+27
        MOVS     R2,#+1
        MOVS     R0,R1
        MOVS     R1,R2
        LSLS     R1,R1,R0
        CMP      R3,#+1
        BNE.N    ??USART_GetITStatus_2
        MOVS     R0,R1
        LDRH     R1,[R4, #+12]
        ANDS     R1,R1,R0
        B.N      ??USART_GetITStatus_3
??USART_GetITStatus_2:
        CMP      R3,#+2
        BNE.N    ??USART_GetITStatus_4
        MOVS     R0,R1
        LDRH     R1,[R4, #+16]
        ANDS     R1,R1,R0
        B.N      ??USART_GetITStatus_3
??USART_GetITStatus_4:
        MOVS     R0,R1
        LDRH     R1,[R4, #+20]
        ANDS     R1,R1,R0
??USART_GetITStatus_3:
        MOVS     R2,R5
        LSLS     R2,R2,#+16       ;; ZeroExtS R2,R2,#+16,#+16
        LSRS     R2,R2,#+16
        LSRS     R2,R2,#+8
        LSLS     R2,R2,#+16       ;; ZeroExtS R2,R2,#+16,#+16
        LSRS     R2,R2,#+16
        MOVS     R3,#+1
        MOVS     R0,R2
        MOVS     R2,R3
        LSLS     R2,R2,R0
        MOVS     R0,R2
        LDRH     R2,[R4, #+0]
        ANDS     R2,R2,R0
        CMP      R1,#+0
        BEQ.N    ??USART_GetITStatus_5
        CMP      R2,#+0
        BEQ.N    ??USART_GetITStatus_5
        MOVS     R0,#+1
        B.N      ??USART_GetITStatus_6
??USART_GetITStatus_5:
        MOVS     R0,#+0
??USART_GetITStatus_6:
        POP      {R4,R5,PC}       ;; return
        DATA
??USART_GetITStatus_1:
        DC32     0x30e

        RSEG CODE:CODE:NOROOT(2)
        THUMB
USART_ClearITPendingBit:
        PUSH     {R4,R5,LR}
        MOVS     R4,R0
        MOVS     R5,R1
        MOVS     R0,#+0
        MOVS     R1,#+0
        CMP      R5,#+40
        BEQ.N    ??USART_ClearITPendingBit_0
        LDR.N    R0,??DataTable47  ;; 0x727
        CMP      R5,R0
        BEQ.N    ??USART_ClearITPendingBit_0
        LDR.N    R0,??DataTable48  ;; 0x626
        CMP      R5,R0
        BEQ.N    ??USART_ClearITPendingBit_0
        LDR.N    R0,??DataTable49  ;; 0x525
        CMP      R5,R0
        BEQ.N    ??USART_ClearITPendingBit_0
        LDR.N    R0,??DataTable50  ;; 0x424
        CMP      R5,R0
        BEQ.N    ??USART_ClearITPendingBit_0
        LDR.N    R0,??DataTable51  ;; 0x846
        CMP      R5,R0
        BEQ.N    ??USART_ClearITPendingBit_0
        LDR.N    R0,??DataTable52  ;; 0x96a
        CMP      R5,R0
        BEQ.N    ??USART_ClearITPendingBit_0
        MOVS     R0,#+864
        CMP      R5,R0
        BEQ.N    ??USART_ClearITPendingBit_0
        MOVS     R0,#+608
        CMP      R5,R0
        BEQ.N    ??USART_ClearITPendingBit_0
        MOVS     R0,#+352
        CMP      R5,R0
        BEQ.N    ??USART_ClearITPendingBit_0
        LDR.N    R1,??USART_ClearITPendingBit_1  ;; 0x34e
        LDR.N    R0,??DataTable53  ;; `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`
        _BLF     assert_failed,??assert_failed??rT
??USART_ClearITPendingBit_0:
        MOVS     R0,R5
        LSLS     R0,R0,#+16       ;; ZeroExtS R0,R0,#+16,#+16
        LSRS     R0,R0,#+16
        LSRS     R0,R0,#+8
        LSLS     R0,R0,#+16       ;; ZeroExtS R0,R0,#+16,#+16
        LSRS     R0,R0,#+16
        MOVS     R1,#+1
        LSLS     R1,R1,R0
        LDRH     R0,[R4, #+0]
        BICS     R0,R0,R1
        STRH     R0,[R4, #+0]
        POP      {R4,R5,PC}       ;; return
        Nop      
        DATA
??USART_ClearITPendingBit_1:
        DC32     0x34e

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable47:
        DC32     0x727

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable48:
        DC32     0x626

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable49:
        DC32     0x525

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable50:
        DC32     0x424

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable51:
        DC32     0x846

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable52:
        DC32     0x96a

        RSEG CODE:CODE:NOROOT(2)
        DATA
??DataTable53:
        DC32     `?<Constant "C:\\\\David JIANG\\\\ST MCU...">`

        RSEG CODE:CODE:NOROOT(2)
        THUMB
??RCC_APB2PeriphResetCmd??rT:
        LDR.N    R3,??Subroutine0_0  ;; RCC_APB2PeriphResetCmd
        BX       R3
        DATA
??Subroutine0_0:
        DC32     RCC_APB2PeriphResetCmd

        RSEG CODE:CODE:NOROOT(2)
        THUMB
??RCC_APB1PeriphResetCmd??rT:
        LDR.N    R3,??Subroutine1_0  ;; RCC_APB1PeriphResetCmd
        BX       R3
        DATA
??Subroutine1_0:
        DC32     RCC_APB1PeriphResetCmd

        RSEG CODE:CODE:NOROOT(2)
        THUMB
??assert_failed??rT:
        LDR.N    R3,??Subroutine2_0  ;; assert_failed
        BX       R3
        DATA
??Subroutine2_0:
        DC32     assert_failed

        RSEG CODE:CODE:NOROOT(2)
        THUMB
??RCC_GetClocksFreq??rT:
        LDR.N    R3,??Subroutine3_0  ;; RCC_GetClocksFreq
        BX       R3
        DATA
??Subroutine3_0:
        DC32     RCC_GetClocksFreq

        RSEG DATA_C:CONST:SORT:NOROOT(2)
`?<Constant "C:\\\\David JIANG\\\\ST MCU...">`:
        DATA
        DC8 43H, 3AH, 5CH, 44H, 61H, 76H, 69H, 64H
        DC8 20H, 4AH, 49H, 41H, 4EH, 47H, 5CH, 53H
        DC8 54H, 20H, 4DH, 43H, 55H, 5CH, 44H, 6FH
        DC8 63H, 73H, 5CH, 53H, 54H, 4DH, 33H, 32H
        DC8 5CH, 41H, 4EH, 5FH, 4AH, 49H, 41H, 4EH
        DC8 47H, 5CH, 54H, 49H, 4DH, 20H, 45H, 6EH
        DC8 63H, 6FH, 64H, 65H, 72H, 5CH, 65H, 78H
        DC8 61H, 6DH, 70H, 6CH, 65H, 5CH, 46H, 57H
        DC8 4CH, 69H, 62H, 5CH, 73H, 72H, 63H, 5CH
        DC8 73H, 74H, 6DH, 33H, 32H, 66H, 31H, 30H
        DC8 78H, 5FH, 75H, 73H, 61H, 72H, 74H, 2EH
        DC8 63H, 0
        DC8 0, 0

        END
// 
// 2 000 bytes in segment CODE
//    92 bytes in segment DATA_C
// 
// 1 968 bytes of CODE  memory (+ 32 bytes shared)
//    92 bytes of CONST memory
//
//Errors: none
//Warnings: none
